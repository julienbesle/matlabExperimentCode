function theImage=gabor(nr,f,c,p,o,b);%% theImage=gabor(numrows,freq,contrast,phase,orientation,b);%% freq,contrast,phase,orientation: scalars or arrays of equal length.%% Returns a gaussian-windowed cosine stimulus.% The cosine wave is specified by frequency (c/image), phase (deg), and orientation (deg).% The phase is defined relative to the center of the pattern.% Horizontal and vertical correspond to 0 deg and 90 deg, respectively% (e.g., positive orientations are counterclockwise rotations% from horizontal).%% Both the cosine wave and gaussian are written% to a square 2D matrix with a coordinate system that goes from -0.5 to +0.5, with% location <0,0> corresponding to the center of the matrix. The center of the% matrix is location <p,p>, where p = round(nr/2)+1.%% The Gaussian is defined as Gauss(x) = exp(-pi*(x/(0.5*b))^2).% The parameter b specifies the width, in image units, between the points% at which the gaussian is 0.043. For example, if you want a gassian% that drops to 0.043 at x values that are ±0.5 image units from the% image's center, then you should pass a b value of 1. When b=1, the% Gaussian's full-width at half-height is 0.47*patternWidth. Set b=1.06% to obtain a Gaussian with a full-width (at half-height) equal to 0.5*patternWidth.%nc=nr;if (length(f)==1)	temp=grating(nr,f,c,p,o);else	sp=zeros(nr,nc);	for k0=1:length(f)		temp=grating(nr,f(k0),c(k0),p(k0),o(k0));		sp=sp+temp;	end;	temp=sp./length(f);end;gw=gauss(nr,b);theImage=temp.*gw;return;
function [theImage,rs]=noise2d(nr,cvar,vmin,vmax,exact);%%	function [theImage,rs]=noise2d(nr,cvar,vmin,vmax,exact);%	nr == # of rows%	cvar == contrast variance; the variance of the noise distribution%	vmin & vmax == min and max allowable values %	exact : if set to 1, then the variance of every sample of noise will be exactly cvar%	returns theImage, which is a nr x nc matrix, and rs, which is the seed for the random number generator%defarg('nr',256);defarg('cvar',0.1);defarg('vmin',-1);defarg('vmax',1);defarg('exact',0);nc=nr;rs=randn('state');if (cvar==0)	theImage=zeros(nr,nc);	return;end;theImage=randn(nr,nc);if (exact==1)	tv=var(theImage(:));else	tv=1;end;theImage=theImage*sqrt(cvar/tv);	% theImage now has a variance of cvaralldone=0;while(alldone==0)	tmp=find((theImage<vmin)|(theImage>vmax));	alldone=(length(tmp)==0);		nv=randn(1,length(tmp));	if (length(tmp)>1)			tv=var(nv);		nv=nv*sqrt(cvar/tv);	% nv now has a variance of cvar	end;		theImage(tmp)=nv;	% insert new values into theImage	if (exact==1)		tv=var(theImage(:));		theImage=theImage*sqrt(cvar/tv);	% theImage now has a variance of cvar	end;end;return;
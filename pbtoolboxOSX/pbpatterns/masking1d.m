function	latency=masking1d(nr,f,c,o,cvar,no,b)%%%%ni=40;	% # of images in movienc=nr;vblframes=4;t0=GetSecs; t1=GetSecs;	 % Initialize GetSecs and allocate memory for t0 & t1[window,wrect]=SCREEN(0,'OpenWindow',127);stimrect=SetRect(0,0,nc,nr);	%  newRect = SetRect(left,top,right,bottom);destrect=stimrect;destrect=CenterRect(destrect,wrect);gw=gauss(nr,b);clut=makeclut(0.9);target1=grating(nr,f,c,0,o);target2=grating(nr,f,c,0,o+90);t1=[1,1,1,1,1];t2=[2,2,2,2,2];t0=[0,0,0,0,0];tbuff=[t1,t0,t1,t0,t2,t0,t2,t0];for k0=1:ni  	offscreen(k0)=SCREEN(window,'OpenOffscreenWindow',0,stimrect); % allocate memory for offscreen windows	nimage=noise1d(nr,cvar,no);	if (tbuff(k0)==0)		temp=gw.*nimage;	end;	if (tbuff(k0)==1)		temp=gw.*(nimage+target1);	end;	if (tbuff(k0)==2)		temp=gw.*(nimage+target2);	end;	temp=round(127*temp+127);	pt=find(temp>254);	temp(pt)=254+zeros(1,length(pt));	pt=find(temp<0);	temp(pt)=zeros(1,length(pt));	SCREEN(offscreen(k0),'PutImage',temp);end;for k0=1:ni  	offscreen2(k0)=SCREEN(window,'OpenOffscreenWindow',0,stimrect); % allocate memory for offscreen windows	nimage=noise1d(nr,cvar/100,no);	if (tbuff(k0)==0)		temp=gw.*nimage;	end;	if (tbuff(k0)==1)		temp=gw.*(nimage+target1);	end;	if (tbuff(k0)==2)		temp=gw.*(nimage+target2);	end;	temp=round(127*temp+127);	pt=find(temp>254);	temp(pt)=254+zeros(1,length(pt));	pt=find(temp<0);	temp(pt)=zeros(1,length(pt));	SCREEN(offscreen2(k0),'PutImage',temp);end;for k0=1:ni  	offscreen3(k0)=SCREEN(window,'OpenOffscreenWindow',0,stimrect); % allocate memory for offscreen windows	nimage=noise1d(nr,cvar,no+90);	if (tbuff(k0)==0)		temp=gw.*nimage;	end;	if (tbuff(k0)==1)		temp=gw.*(nimage+target1);	end;	if (tbuff(k0)==2)		temp=gw.*(nimage+target2);	end;	temp=round(127*temp+127);	pt=find(temp>254);	temp(pt)=254+zeros(1,length(pt));	pt=find(temp<0);	temp(pt)=zeros(1,length(pt));	SCREEN(offscreen3(k0),'PutImage',temp);end;	err=SCREEN(window,'SetClut',clut);	%oldval=screen(window,'Preference','WaitForVBLInterrupt',1);	GetSecs(t0);	if (vblframes<1) vblframes=1; end;	if (vblframes>100) vblframes=100; end; 	SCREEN('CopyWindow',offscreen2(1),window,stimrect,destrect);	c=mouseclick;% first, show gratings alternating without noise	alldone=0;	stim=1;	numframes=1;	while (alldone==0)  		SCREEN('CopyWindow',offscreen2(stim),window,stimrect,destrect);		numframes=numframes+1;		stim=mod(numframes,ni)+1;  		SCREEN(window,'WaitVBL',vblframes);		[alldone,t1]=KbCheck;	end;	SCREEN('CopyWindow',offscreen(1),window,stimrect,destrect);  	SCREEN(window,'WaitVBL',67);% next, show gratings alternating without noise at orientation A	alldone=0;	stim=1;	numframes=1;	while (alldone==0)  		SCREEN('CopyWindow',offscreen(stim),window,stimrect,destrect);		numframes=numframes+1;		stim=mod(numframes,ni)+1;  		SCREEN(window,'WaitVBL',vblframes);		[alldone,t1]=KbCheck;	end;	SCREEN('CopyWindow',offscreen3(1),window,stimrect,destrect); 	SCREEN(window,'WaitVBL',67);% next, show gratings alternating without noise at orientation B	alldone=0;	stim=1;	numframes=1;	while (alldone==0)  		SCREEN('CopyWindow',offscreen3(stim),window,stimrect,destrect);		numframes=numframes+1;		stim=mod(numframes,ni)+1;  		SCREEN(window,'WaitVBL',vblframes);		[alldone,t1]=KbCheck;	end;	SCREEN('CopyWindow',offscreen2(1),window,stimrect,destrect); 	SCREEN(window,'WaitVBL',67);% FINALLY, show gratings alternating without noise (again)	alldone=0;	stim=1;	numframes=1;	while (alldone==0)  		SCREEN('CopyWindow',offscreen2(stim),window,stimrect,destrect);		numframes=numframes+1;		stim=mod(numframes,ni)+1;  		SCREEN(window,'WaitVBL',vblframes);		[alldone,t1]=KbCheck;	end;	latency=t1-t0;  	SCREEN('CloseAll'); return;	
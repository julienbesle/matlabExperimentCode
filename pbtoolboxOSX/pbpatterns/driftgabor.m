function [latency]=driftgabor(nr,f,c,p,o,b,pinc,cv,vblframes,theClut);%%	function [latency]=driftgabor(nr,f,c,p,o,b,pinc,cv,vblframes,theClut);%	nr == number of rows in the stimulus (# rows = # columns)%	f == vector containing spatial frequency (cy/image)%	c == vector containing contrast of each component%	p == vector containing phases of components in deg%	o == vector containing orientation of components in deg%	b == full-width of gaussian window (1 = 1 image, 0.5= 0.5*image, etc.)%	pinc == displacement step size in deg phase%	cv == 1=constant velocity; 0=constant temporal frequency%	vblframes == delay, in frames, between displacements%	clut = look-up table%% make movie	t0=GetSecs; t1=GetSecs;	 % Initialize GetSecs and allocate memory for t0 & t1  	[window,wrect]=SCREEN(0,'OpenWindow',127);	nc=nr;	stimrect=SetRect(0,0,nc,nr);	%  newRect = SetRect(left,top,right,bottom);	destrect=stimrect;	destrect=CenterRect(destrect,wrect);	numstim=round(360/pinc)-1;	fmin=min(f);	if (cv==1)		pinc=f./fmin;	else		pinc=f./f;	end;	pinc=pinc.*(360/(numstim+1));	for k0=1:numstim  		offscreen(k0)=SCREEN(window,'OpenOffscreenWindow',0,stimrect); % allocate memory for offscreen windows		temp=gabor(nr,f,c,p,o,b);		% temp=pixelimage(temp,m);		temp=round(127*temp+127);		SCREEN(offscreen(k0),'PutImage',temp);		p=p+pinc;	end;	err=SCREEN(window,'SetClut',theClut);	oldval=screen(window,'Preference','WaitForVBLInterrupt',1);	GetSecs(t0);	alldone=0;	stim=1;	numframes=1;	if (vblframes<1) vblframes=1; end;	if (vblframes>100) vblframes=100; end;	while (alldone==0)  		SCREEN('CopyWindow',offscreen(stim),window,stimrect,destrect);		numframes=numframes+1;		stim=mod(numframes,numstim)+1;  		SCREEN(window,'WaitVBL',vblframes);		[alldone,t1]=KbCheck;	end;	latency=t1-t0;  	SCREEN('CloseAll'); return;%	loop1 = 'while (alldone==0);';%	loop2='SCREEN(''CopyWindow'',offscreen(stim),window,stimrect,destrect);';%	loop3='numframes=numframes+1;stim=mod(numframes,numstim)+1;SCREEN(window,''WaitVBL'',5);[alldone,t1]=KbCheck;end';%	loop=[loop1,loop2,loop3];%	Rush(loop,7);%	latency=t1-t0;% 	SCREEN('CloseAll');%	return;
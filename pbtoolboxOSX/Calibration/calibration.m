% calibration.m%% driver script for for calibrating a CRT% samples the three guns for luminance and fits a gamma function to the% data to produce a master look-up-table that gives lumiance for a range% of RGB combinations. also includes a function to test calibration by% loading a calibration file and presenting an RGB combination for % luminance verification. can calibrate up to three CRT's.%% Depedencies: choosedevice, docal, dofit, viewrgb, GetScreenSize.%			   SCREEN, DLOG (psych toolbox)%% Extended Dependencies: getchar, pellipower, savedatetime,%		       savecomment, savecommand, readdata, pellifit, loadlum%			   hidecursor, showcursor, CenterRect (psych toolbox)%% April 4, 1997.   JMG  ABS  U of Toronto Vision Lab% April 5, 1997.   JMG Included Calibration routine.%% January 30, 1998:  JMG Fixed for MATLAB 5.1   % July 1998: 		 JMG included fitting routine% September 1998: 	 JMG included dependency documentation% Initialize.Device = 0;Spot_Size = 256;r = 255;g = 255;b = 255;numsamples = 5;TestVals = [1,50,128,160,200,255]'*ones(1,3);% Intialize the calibration matrix.calmatrix = [];[Sc_Size,Sc_Height,Sc_Width] = GetScreenSize(Device);Box_Size = [200,100];									Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2];Screen_Pos = [Sc_Width/2-Box_Size(1)/2,Sc_Height/2-Box_Size(2)/2,Box_Size(1),Box_Size(2)];% Make a window for the main control screen.Menu_handle = figure('Color', [.5 .5 .5], 'Position',Screen_Pos,'NumberTitle','off','Name','Calibration');% Get rid of the extra menu bar attributes.set(Menu_handle,'MenuBar','none');% The Experiment initiation/deactivation menu control panel.% The parameters control panel: Image choice, data file name.File = uimenu(Menu_handle,'Label','Options');% The File and Folder Names.Cal_handle = uimenu(File,'Accelerator','C','Label','Calibrate Monitor','Callback','docal(Device, Sc_Height, Sc_Width, Spot_Size, Spot, numsamples);figure(Menu_handle)');Fit_handle = uimenu(File,'Accelerator','F','Label','Fit Data','Callback','[file,folder] = uigetfile(''*.*'',''Choose File'');if file, dofit(file,folder);end;figure(Menu_handle)');Quit_handle = uimenu(File,'Accelerator','Q','Separator','on','Label','Quit','CallBack','close all;');% The display menu control panel. 0 = main screen; 1 = second screen; 2 = third screen.  Default is 0.Params = uimenu(Menu_handle,'Label','Params');screens = screen('Screens');Disp1 = uimenu(Params,'Accelerator','0','Label','Main Screen','CallBack','Device = choosedevice(Disp1,Disp1,Disp2,Disp3);[Sc_Size,Sc_Height,Sc_Width] = GetScreenSize(Device);Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2];figure(Menu_handle)');if find(screens==1)Disp2 = uimenu(Params,'Accelerator','1','Label','Second Screen','CallBack','Device = choosedevice(Disp2,Disp1,Disp2,Disp3);[Sc_Size,Sc_Height,Sc_Width] = GetScreenSize(Device); Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2];figure(Menu_handle)');elseDisp2 = uimenu(Params,'Accelerator','1','Label','Second Screen','Enable','Off','CallBack','Device = choosedevice(Disp2,Disp1,Disp2,Disp3);[Sc_Size,Sc_Height,Sc_Width] = GetScreenSize(Device); Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2];figure(Menu_handle)');endif find(screens==2)Disp3 = uimenu(Params,'Accelerator','2','Label','Third Screen','CallBack','Device = choosedevice(Disp3,Disp1,Disp2,Disp3);[Sc_Size,Sc_Height,Sc_Width] = GetScreenSize(Device); Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2];figure(Menu_handle)');elseDisp3 = uimenu(Params,'Accelerator','2','Label','Third Screen','Enable','Off','CallBack','Device = choosedevice(Disp3,Disp1,Disp2,Disp3);[Sc_Size,Sc_Height,Sc_Width] = GetScreenSize(Device); Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2];figure(Menu_handle)');end% Default display screen (DEVICE).set(Disp1,'Checked','on'); r = '160';g = '160';b = '160';rs = 'Red Gun ';bs = 'Blue Gun ';gs = 'Green Gun ';ps = 'Set RGB Combination';calwarn = 'A Calibration File Must Be Loaded First.';% Spot Size and calibration testing.% Spot_Size = DLOG(''GetResponse'',''Spot Size:'');% numsamples = DLOG(''GetResponse'',''Number of Samples:'');Sz = uimenu(Params,'Separator','on','Accelerator','S','Label','Spot Size','CallBack','resp = inputdlg({''Enter Spot Size: ''},''Spot Size'',1,{num2str(Spot_Size)}); if ~isempty(resp), Spot_Size = str2num(resp{1}); Spot = [Sc_Height/2-Spot_Size/2,Sc_Width/2-Spot_Size/2,Sc_Height/2+Spot_Size/2,Sc_Width/2+Spot_Size/2]; end');numsamp = uimenu(Params,'Accelerator','N','Label','Number of Samples','CallBack','resp = inputdlg({''Enter Number of Samples: ''},''Number of Samples'',1,{num2str(numsamples)}); if ~isempty(resp), numsamples = str2num(resp{1}); if numsamples < 3, numsamples = 3; elseif numsamples > 254, numsamples = 254; end; end');viewhandle = uimenu(Params,'Accelerator','V','Label','View RGB','CallBack','[Calibration_File,Calibration_Folder] = uigetfile(''*.ddf'',''Choose Calibration File'');if Calibration_File~=0,cal=getddf(Calibration_File,Calibration_Folder);end;if exist(''cal''),resp=inputdlg({rs,gs,bs},ps,1,{r,g,b});if~isempty(resp),r=resp{1};g=resp{2};b=resp{3};viewrgb(Device,[str2num(r),str2num(g),str2num(b)],Spot,cal.calmatrix); else msgbox(calwarn,''!'',''warn''); uiwait; end; figure(Menu_handle); end');testhandle = uimenu(Params,'Accelerator','T','Label','Test Calibration','CallBack','[Calibration_File,Calibration_Folder] = uigetfile(''*.ddf'',''Choose Calibration File''); if Calibration_File ~= 0, cal = getddf(Calibration_File,Calibration_Folder); end; if exist(''cal'',''var''), viewrgb(Device,TestVals,Spot,cal.calmatrix); else msgbox(''A Calibration File Must Be Loaded First.'',''!'',''warn''); uiwait; end; figure(Menu_handle)');% old testing routines.%Cal1 = uimenu(Test,'Separator','on','Accelerator','L','Label','Load a Calibration File','CallBack','[Calibration_File,Calibration_Folder] = uigetfile(''*.ddf'',''Choose Calibration File''); if ~isempty(Calibration_File), cal = %getddf(Calibration_File,Calibration_Folder); end;');%View_handle = uimenu(Test,'Accelerator','V','Label','View RGB Combinations','CallBack','if exist(''cal'',''var''), viewrgb(Device,TestVals,Spot,cal.calmatrix); else msgbox(''A Calibration File Must Be Loaded First.'',''!'',''warn''); uiwait; end; %figure(Menu_handle)');%RGB1 = uimenu(Params,'Separator','on','Accelerator','R','Label','Red Gun...','CallBack','r = DLOG(''GetResponse'',''Red Value (1-254)'');');%RGB2 = uimenu(Params,'Accelerator','G','Label','Green Gun...','CallBack','g = DLOG(''GetResponse'',''Green Value (1-254)'');');%RGB3 = uimenu(Params,'Accelerator','B','Label','Blue Gun...','CallBack','b = DLOG(''GetResponse'',''Blue Value (1-254)'');');%RGB4 = uimenu(Params,'Separator','on','Accelerator','A','Label','Set RGB Values...','CallBack','r = DLOG(''GetResponse'',''Red Value (1-254)''); g = DLOG(''GetResponse'',''Green Value (0-254)''); b = DLOG(''GetResponse'',''Blue Value (0-254)'');');
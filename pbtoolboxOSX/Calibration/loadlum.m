function [data] = loadlum(coeffs,numpts)% function [data] = loadlum(coeffs,numpts)%% makes a matrix of rgb combinations and their corresponding% luminances, based upon previous curve fits to the individual% guns. [coeffs] is a 4x4 matrix, with columns 1-4 corresponding% to the alpha, beta, kappa, and gamma parameters of the pelli% gamma function (see pellipower.m), respectively; and rows 1-3% corresponding to the red, green, and blue gun fits. The 4th row% is reserved for the final calibration coefficients.% [data] is returned with the r,g, and b combinations in the first% three columns and the corresponding combined luminance in the 4th% column. [numpts] is the resolution of the clut (e.g., 8-bit = 255). %% Dependencies: pellipower%% July 1998 JMG  U of T Vision Lab% the number of stolen samples between pointsres = 7;% the code for incrementing r,g, and brinc = repmat([0 0 1 1 0 0 1],1,numpts-1)';ginc = repmat([0 0 0 0 1 1 1 ],1,numpts-1)';binc = repmat([0 1 0 1 0 1 0],1,numpts-1)';% makes a list of integers from 1 to [numpts], repeating each for [res] timesbasepix = ([1:numpts-1]'*ones(1,res))';basepix = basepix(:);% the values of r,g, and b to plug into pellipowerrpix = [basepix+rinc;numpts];gpix = [basepix+ginc;numpts];bpix = [basepix+binc;numpts];% the corresponding luminanceseqlum = pellipower(coeffs(1,:),rpix) + pellipower(coeffs(2,:),gpix) + pellipower(coeffs(3,:),bpix);minlum = eqlum(min(find(eqlum>0)));locs = find(eqlum<minlum);eqlum(locs) = ones(size(locs))*minlum;% final data matrix, in columnsdata = [rpix,gpix,bpix,eqlum];return
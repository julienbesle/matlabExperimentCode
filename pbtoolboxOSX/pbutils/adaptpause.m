function adaptpause( winPtr, winRect, seconds, quitkeys)% function key = adaptpause( winPtr, winRect, seconds quitkeys)%%     - <winPtr> is window where message is shown during pause%     - <winRect> is the rect for winPtr%	  - <quitkeys> list of keypresses that will cause a pause (default='0')% 13-Apr-98 - created (RFM)% Feb-2000 - modified extensively (PJB)% 28-Mar-00 - fixed bug so that text is erased properly when quit-key is pressed% 25-Nov-06 - modified to run in OS-X (PJB)% return if no key pressedif nargin<2,	returnend% set default argumentsdefarg('seconds',60);defarg('quitkeys','0');ny=100;% check seconds to make sure that it is reasonablemaxsec=60*30;if (seconds<0)	disp('ERROR IN adaptpause: negative adaptation duration!');	return;end;if (seconds>maxsec)	disp(['WARNING (adaptpause): Adaptation duration has been truncated to ',num2str(maxsec),' secs.']);end;s=GetSecs;quittime=s+seconds;FlushEvents('keyDown');pleasequit=0;while (pleasequit~=1)&&(s<quittime)	% pause	s=GetSecs;% 	[newx,newy] = centertext(winPtr,winRect,['Pause for adaptation...',num2str(round(quittime-s)),' secs remaining'],128,1,24);    % Now horizontally and vertically centered:    mytext=['Pause for adaptation...',num2str(ceil(quittime-s)),' secs remaining'];    [newx, newy, bbox] = DrawFormattedText(winPtr, mytext, 'center', ny, 0);    Screen('Flip',winPtr);	if CharAvail     %	key=GetChar;	%	if ismember(key,quitkeys)				pleasequit=1;	%	end;	% if ismember	end;	% if CharAvail	pause(1); 	%[newx,newy] = centertext(winPtr,winRect,['Pause for adaptation...',num2str(round(quittime-s)),' secs remaining'],128,0,24);    mytext=['Pause for adaptation...',num2str(round(quittime-s)),' secs remaining'];    [newx, newy, bbox] = DrawFormattedText(winPtr, mytext, 'center', ny, 0);    Screen('Flip',winPtr);end	% while% 	pause(2);return
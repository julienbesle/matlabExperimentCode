function thefilter=fitler2d(lowf,highf,orient1,orient2,dim);%% function thefilter=fitler2d(lowf,highf,orient1,orient2,dim)% Constructs a 2D ideal, bandpass filter.% parameters:% lowf, highf: only spatial frequencies between lowf & highf are passed by the filter;%	If either lowf or highf is empty ([ ]) or NaN, then all frequencies are passed.% orient1, orient2:  only orientations between orient1 & orient2 are passed by the filter;%   If either orient1 or orient2 is empty ([ ]) or NaN, then all orientations are passed (vertical = 0 deg; horizontal= 90 deg)%		dim: dimension of matrix (must be greater than zero).% Only spatial frequencies between lowf and highf are passed by the filter.% Only orientations between o1 and o2 are passed by the filter (vertical = 0 deg; horizontal = 90 deg)% The filter is returned is returned in "frequency space" format: The% it is a binary, dim x dim matrix that contains a 1 at all% frequencies that fall within the filter's pass-band and zeros everywhere else.% The filter can can then be used to filter the amplitude spectrum of an image.% % SEE bandpassif (nargin<5)	disp('ERROR IN fitler2d: 5 input parameters are required.');	thefilter=NaN;	return;end;if (dim<1)	disp('ERROR IN fitler2d: dimension must be greater than zero.');	thefilter=NaN;	return;end;thefilter=bpfilter(lowf,highf,dim);temp=ofilter(orient1,orient2,dim);thefilter=thefilter.*temp;return;
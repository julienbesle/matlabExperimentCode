function coeffs = pbPelliFit(clutNumber,lumValue,x0)% July 1998  JMG  U of T Vision Lab% the data% data = [clutNumber,lumValue,(1./(lumValue*0.1))];% default valuesif nargin < 4    dcOffset=0;end;if nargin < 3	x0(1) = min(lumValue);	x0(2) = .01;	x0(3) = .01;	x0(4) = 2;end	% % inline function for least-squares fit% errfn = inline('sum(((pellipower([x(1),x(2),x(3),x(4)],P1(:,1)) - P1(:,2)).^2)./P1(:,3))','x','P1');options=optimset();options=optimset(options,'Display','off');options=optimset(options,'Diagnostics','off');options=optimset(options,'MaxIter',10000);% find luminance values less than one% i'm going to weight these values less when computing best-fitting curves% my experience is that these values are less reliably measured by PR650lowLumValues=find(lumValue<1);tol=1e-4;tmp0 = find(lumValue==0);lumValue(tmp0)=tol;% minimizecoeffs = fminsearch(@PelliFitFunc,x0,options);    %%%%%%%%%%%%%%%%    %%%%%%%%%%%%%%%%    function f = PelliFitFunc(x)%         y = zeros(size(clutNumber));%         locs=find(x(2)+x(3)*clutNumber<0);%         y = x(1) + (x(2)+x(3)*clutNumber).^y(4);%         y(locs) = x(1);                y = pbPelliPower(x,clutNumber);        % get rid of any zeros        tol = 1e-4;        tmp0=find(y==0);        y(tmp0)=tol;        tmp = log10(lumValue./y);        ss = tmp.^2;        ss(lowLumValues) = ss(lowLumValues).*0.001; % reduce weight        f = sum(ss(:));    end    end
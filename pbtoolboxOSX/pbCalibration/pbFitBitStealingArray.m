function [coeffs,calmatrix]=pbFitBitStealingArray(lutnumber,lum)%     lutnumber=calRecord.calData(:,1);        caldata=[lutnumber,lum];    dataSize=size(caldata);	numpts = dataSize(1);	alpha = min(min(caldata(:,2)));	beta = .01;	kappa = .01;	gamma = 2;	initcoeffs = [alpha beta kappa gamma];	% fit the data:	coeffs = pbPelliFit(caldata(:,1),caldata(:,2),initcoeffs);        % create a big look-up table:    bigLUTarray=pbBitStealingArray;    bigLUTsize=size(bigLUTarray);    bigLUMvalues = pbPelliPower(coeffs,[1:bigLUTsize(1)]); % calc luminance values%     size(bigLUTarray)%     size(bigLUMvalues)    % reject negative values:    tmp0=find(bigLUMvalues<0);    if(length(tmp0)>0)        bigLumvalues(tmp0)=0;    end;    calmatrix = [bigLUTarray,bigLUMvalues'];	% final calibration plot	figure(20);	plot(caldata(:,1),caldata(:,2),'ko',[1:bigLUTsize(1)],calmatrix(:,4),'k-');	ylabel('Luminance (cd/m^2)');	xlabel('Index');	title('Look-Up Table');				drawnow;        %     calFitRecord=calRecord;%     tmpRGB=calRecord.background;%     tmp=find(bigdata(:,1)==tmpRGB(1)&bigdata(:,2)==tmpRGB(2)&bigdata(:,3)==tmpRGB(3));%     lmaxminave=[calmatrix(end,4),calmatrix(1,4),bigdata(tmp,4)];%     calFitRecord.lmaxminave=lmaxminave;%     calFitRecord.ABKG=coeffs(4,:);%     calFitRecord.calmatrix=bigdataArray;		end
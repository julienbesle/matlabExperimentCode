% pmlab.m% Driver for the point_the_mouse experiments.%% 03/02/00 - Finished by PJB.% clear the workspaceclear all;showcursor(0); % shows an arrow% initialize the random number generatorrandn('state',sum(100*clock));pmparams;startexperiment=0;while (startexperiment==0)	disp(' ');	disp('>>>>>>>>> ATTENTION <<<<<<<<<<');	disp(['Make sure that the viewing distance is ',num2str(vd),' cm.']);	disp(' ');	disp('******** ?? CHANGE CURRENT SETTINGS ?? ********');	disp(['1......ID       (',sidnum,')']);	disp(['2......GENDER   (',sgender,')']);	disp(['3......AGE      (',num2str(sage),')']);		switch lower(groupID)	case 'o'		 		disp(['4......GROUP    (OLD)']);	case 'y'		disp(['4......GROUP    (YOUNG)']);	otherwise		disp(['4......GROUP    (NO GROUP SPECIFIED)']);	end; % switch		  	disp(['5......COMMENT  (',scomment,')']); 	disp(['6......LOAD PREVIOUS SETTINGS']);% 	if (usespace)% 		disp(['7......AUTO-TRIAL START IS OFF']);% 	else% 		disp(['7......AUTO-TRIAL START IS ON']);% 	end;	disp(['7......Number of trials per location (',num2str(numtrialsperlocation),')']);	disp(['8......SPOT DIAMETER IN PIXELS (',num2str(spotdiampix),')']);	disp(['9......RESPONSE-CIRCLE DIAMETER IN PIXELS (',num2str(circdiampix),')']);	disp(['b......Begin experiment']);	disp(['x......eXit experiment']);	tmpselect=lower(input('ENTER YOUR SELECTION >> ','s'));	switch tmpselect	case '1'		sidnum=[];		disp('');		while (isempty(sidnum))			sidnum=input('Subject ID: ','s');		end;		case '2'						sgender=[];		disp('');		while (isempty(sgender))			sgender=input('Gender: ','s');		end;		case '3'				sage=-1;		disp(' ');		while ((sage<1)|(sage>110))			sage=input('Subject''s age (1-110): ');		end;		case '4'		groupID=[];		tmp=[];		disp('');		while (isempty(groupID))			tmp=input('Group (o or y): ','s');			tmp=lower(tmp);			if (strcmp(tmp,'o')==1)|(strcmp(tmp,'y')==1)				groupID=tmp;			end;		end;			case '5'		scomment=[];		disp('');		while (isempty(scomment))			scomment=input('Comment: ','s');		end;			case '6'		load subjsettings;		case '7'		numtrialsperlocation=-1;		disp(' ');		while ((numtrialsperlocation<1)|(numtrialsperlocation>4))			numtrialsperlocation=input('number of trials per location (1, 2, 3 or 4): ');		end;			case '8'		disp(' ');		spotdiampix=-1;		while (spotdiampix<0)			spotdiampix=input('Spot Diameter in Pixels: ');		end;		case '9'		disp(' ');		circdiampix=-1;		while (circdiampix<0)			circdiampix=input('Response-Circle Diameter in Pixels: ');		end;						case 'b'		startexperiment=1;			case 'x'		disp(' ');		yesno=input('Really exit (y/n)? ','s');		if (length(yesno)<1)|(lower(yesno)~='n')			return;		end;	end;end;save 'subjsettings' sidnum sgender sage groupID scomment; % save settings% this loads the calibration file into memory% it is stored as a structure with lots of fields.% see the calibration routine and 'getddf' for more% details.disp('reading calibration file...');[cal] = getddf(calfile);% create data matrixdm1=targlocsdeg'*ones(1,numisi); % direction of target[n1,m1]=size(dm1);dm1=reshape(dm1,(n1*m1),1);dm1=sort(dm1);randinc=(2*randrangedeg)*rand(size(dm1))-randrangedeg;	% a set of random numbers used for sorting trialsdm2=isidurframes'*ones(1,numlocs); % isi durations[n2,m2]=size(dm2);dm2=reshape(dm2,(n2*m2),1);dm3=round(circdiampix/2)*ones(size(dm1)); % radius of target; currently it is constant, but it might vary across trials in future versions of experimentdmtmp=[dm1,randinc,dm2,dm3];% concatenate dmtmp to create multiple trials at each locationdm=[];for kk=1:numtrialsperlocation	dm=[dm;dmtmp];end;% now randomly sort everything twicent=max(size(dm));rtmp=rand(nt,1);dm=[dm,rtmp];dm=sortrows(dm,5);rtmp=rand(nt,1);dm(:,5)=rtmp;dm=sortrows(dm,5);dm=dm(:,1:4); % dm: col 1 is target direction; col 2 is random direction increment; col 3 is ISI; col 4 is radius% create the data file for the real-time mouse recordings[mousefilename]=pmcreatemousefile(mousedatadir,groupID,sidnum,exptname,sgender,sage,scomment,mainpath);oldOn=fileshare(-3); % turn off filesharingstarttime=getsecs;[data,quitflag]=pmdisplay(cal,displayrate,duration,isidurframes,spotdiampix,circdiampix,practicetrials,...	intertrial,adaptseconds,usespace,distanceFromFixPnt,targlocsdeg,randrangedeg,mainscrs,dm,mousefilename,mousedatadir);endtime=getsecs;oldOn=fileshare(oldOn); % re-set filesharingdisp(['Elapsed time = ',num2str((endtime-starttime)/60),' minutes']);% close the screen and data file. this is a wrapper around brainard that closes % all of the active windows and any text data file that may have been% opened but not closed during the routine.closeall;	if(quitflag==1)	disp('Experiment aborted by user.');end;disp(['mouse movement data stored in text file ',mousefilename]);pmwritefile; % write data files to diskcd(mainpath); % restore original path
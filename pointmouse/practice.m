[t0,t1]=size(dm);for curtrial=1:practicetrials	stime=getsecs;	tmp=randomcondition(t0);		curAngle=dm(tmp,1)+dm(tmp,2); % dm: col 1 is target direction; col 2 is random direction increment; col 3 is ISI; col 4 is radius	curRadius=dm(tmp,4);	% build the spot stimulus	% first, calculate the x,y coordinates	xoffset=round(curRadius*cos(deg2rad(curAngle)));	yoffset=round(curRadius*sin(deg2rad(curAngle)));	% next, build the stimulus rectangle	stimrect=setrect(0,0,spotdiampix,spotdiampix); % create stimulus rectangle	stimrect=CenterRect(stimrect,rects(1,:)); % center it in the display window	stimrect=OffsetRect(stimrect,xoffset,yoffset); % newRect = OffsetRect(oldRect,x,y)	% finally, calculate the end points of the line drawn to the stimulus	fixX=fixpnt(rectleft)+round(rectwidth(fixpnt)/2);	fixY=fixpnt(recttop)+round(rectheight(fixpnt)/2);	stimX=stimrect(rectleft)+round(rectwidth(stimrect)/2);	stimY=stimrect(recttop)+round(rectheight(stimrect)/2);	% DO ONE TRIAL...	snd('Open');	% open a channel for asynchronous sound output	gotime=stime+intertrial;	while (getsecs<gotime)	end;% 	sound(introsnd);	snd('Play',introsnd,8192); % this begins an introductory sound & immediately returns control to program	screen(screens(1),'WaitBlanking');	screen(screens(1),'FillOval',0,fixpnt); % erase fixation point	screen(screens(1),'WaitBlanking',5);	screen(screens(1),'FillOval',1,fixpnt); % draw fixation point	screen(screens(1),'WaitBlanking',5);	screen(screens(1),'FillOval',0,fixpnt); % erase fixation point	screen(screens(1),'WaitBlanking',5);	screen(screens(1),'FillOval',1,fixpnt); % draw fixation point	waitsecs(0.5);	screen(screens(1),'DrawLine',0,fixX,fixY,stimX,stimY); % "draw" line (invisible because it is the same colour as the background... did this so that the code is the same as that used in the experimental trials	screen(screens(1),'FillOval',2,stimrect); % draw spot	screen(screens(1),'FillOval',1,fixpnt); % draw fixation point	waitsecs(duration);	screen(screens(1),'WaitBlanking');	screen(screens(1),'DrawLine',0,fixX,fixY,stimX,stimY); % erase line%	screen(screens(1),'FillOval',0,stimrect); % erase spot	screen(screens(1),'FillOval',1,fixpnt); % draw fixation point	screen(screens(1),'WaitBlanking',curISI); % wait for isi duration% 	screen(screens(1),'FillOval',0,fixpnt); % erase fixation point%	screen(screens(1),'FrameOval',2,boxrect); % draw circle	% do mouse stuff here		% center the mouse on the fixation point	theX=fixpnt(rectleft)+round(rectwidth(fixpnt)/2);	theY=fixpnt(recttop)+round(rectheight(fixpnt)/2);	while 1		SetMouse(theX,theY);		[checkX,checkY] = GetMouse;		if (checkX==theX) & (checkY==theY)			break;		end	end% 	sound(corrsnd); % this makes a higher-pitch sound	snd('Play',corrsnd,8192); % this begins a higher-pitch sound & immediately returns control to program	flushmouse;	showcursor(2); % shows a plus sign (+) 	button=0;	time0=clock;	gotgoodclick=0	while (gotgoodclick==0)		screen(screens(1),'WaitBlanking'); % wait one frame		[x,y,button] = getmouse(screens(1));		if (button==1)&(isinrect(x,y,stimrect))			gotgoodclick=1;		end;	end; % while (cf<=nr)	waitsecs(1);	screen(screens(1),'FillOval',0,stimrect); % erase spot	screen(screens(1),'FillOval',1,fixpnt); % draw fixation point	snd('Close'); % close the sound channel% END OF TRIAL...	hidecursor;end
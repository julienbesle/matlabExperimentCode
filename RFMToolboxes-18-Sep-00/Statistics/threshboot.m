function [ minfit, fitmean, fitstd, fits ] = bootstrap( trials, type, blocks, threshlev, gamma, delta, fname )% BOOTSTRAP  Fit a set of trials and bootstrap to find confidence intervals%% [ minfit, fitmean, fitstd, fits ] = bootstrap( trials, type, blocks, threshlev, gamma, delta, fname )% 24-Mar-98 -- created (RFM)% 12-Aug-98 -- arguments threshlev, gamma, delta added (RFM)% 21-Sep-98 -- argument fname added (RFM)% 18-Jan-00 -- return arguments changed (RFM)% set default argumentsdefarg('type','weibull');defarg('blocks',100);defarg('threshlev',0.75);defarg('gamma',0.5);defarg('delta',0.01);defarg('fname','');% get fit and find threshold[ fp1 fp2 ] = fitpsymet( trials, type, [], gamma, delta );fthresh = getthresh( threshlev, type, [ fp1 fp2 ], gamma, delta );minfit = [ fp1 fp2 fthresh ];% make subject modelsub = subject( type, [ fp1 fp2 ], gamma, delta );% bootstraplevels=trials(:,1);fits=[];fprintf(1,'    ');for i=1:blocks,	fprintf(1,'\b\b\b\b%4d',i);	correct = pollsubject( sub, levels );	[ p1 p2 ] = fitpsymet( [ levels correct ], type );	thresh = getthresh( threshlev, type, [ p1 p2 ], gamma, delta );	fits = [ fits ; p1 p2 thresh ];%	fprintf(1,'%d\t%.4f\t%.4f\t%.4f\n',i,p1,p2,thresh);endfprintf(1,'\b\b\b\b');fitmean=mean(fits,1);fitstd=std(fits,0,1);% save fits and standard errors to fileif ~isempty(fname),	save(fname,'minfit','fitmean','fitstd','fits');endreturn
function [ m, b, mint, bint, rxy ] = linreg( x, y, p )% LINREG  Find linear regression coefficients and confidence intervals%% [ m, b, mint, bint, rxy ] = linreg( x, y, p )%% fits to:  y = mx + b% Adapted from:  McGee, V. (1971).  Principles of statistics:  Traditional % and Bayesian.  New York:  Appleton-Century-Crofts.% 13-Aug-99 -- created (RFM)% set default argumentsdefarg('p',0.95);% calculate summary quantitiesn=size(x(:),1);sx=sum(x(:));ssx=sum(x(:).^2);sy=sum(y(:));ssy=sum(y(:).^2);sxy=sum(x(:).*y(:));% calculate least-squares fit of coefficientsm=( n*sxy - sx*sy )/( n*ssx-sx*sx );b=( ssx*sy - sxy*sx )/( n*ssx - sx*sx );% find confidence interval for mif nargout>=3,	stdx=std(x(:));	stdy=std(y(:));	rxy=m*stdx/stdy;	q=( stdy*sqrt(1-rxy^2) )/( stdx*sqrt(n-2) );	t=tinv(1-(1-p)/2,n-2);	mint(1)=m-t*q;	mint(2)=m+t*q;end% find confidence interval for b% (This method assumes m and b are independent, which they are not.)if nargout>=4,	meanx=mean(x(:));	meany=mean(y(:));	ymin=meany-t*(stdy/sqrt(n));	ymax=meany+t*(stdy/sqrt(n));	bt=[ ymin-meanx*mint(1) ymin-meanx*mint(2) ymax-meanx*mint(1) ymax-meanx*mint(2) ];	bint(1)=min(bt);	bint(2)=max(bt);endreturn
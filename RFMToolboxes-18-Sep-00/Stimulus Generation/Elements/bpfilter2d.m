function [ fmat, ft ] = bpfilter2d( mat, fmin, fmax )% BPFILTER2D  Filter a 2D image%% [ fmat, ft ] = bpfilter2d( mat, fmin, fmax )% 30-Sep-99 -- created;  adapted from bpnoise.m (RFM)% check that image is squaren=size(mat,1);if n~=size(mat,2),	error('Image ''mat'' must be square');end% make filter templateftemp=zeros(n);hn=floor(n/2);% outer limitrmax=round(fmax*(hn-1));c=circ2daa(rmax);i1=(hn+1)-rmax;i2=(hn+1)+rmax;ftemp(i1:i2,i1:i2)=c;% inner limitif fmin>0,	rmin=round(fmin*(hn-1));	c=circ2d(rmin);	i1=(hn+1)-rmin;	i2=(hn+1)+rmin;	ftemp(i1:i2,i1:i2)=ftemp(i1:i2,i1:i2)-c;end% filter imageft=fftshift(fft2(mat)).*ftemp;fmat=real(ifft2(fftshift(ft)));return
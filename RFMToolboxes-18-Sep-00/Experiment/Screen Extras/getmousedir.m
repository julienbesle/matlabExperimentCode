function [ theta, rt ] = getmousedir( winID, circR, freq, postpause )% GETMOUSEDIR  Let user indicate an angle with a mouse click.%% [ theta, rt ] = getmousedir( winID, circR, freq, postpause )%     - <winID> is window where prompt is displayed%     - <circR> is radius of circle on which user clicks%     - <freq> is frequency of 100 ms beep%     - <postpause> is time taken for display to vanish after mouse click (ms)%     - <theta> is angle (radians)%     - <rt> is reaction time (ms)% 17/11/97 - created (RFM)if nargin<4,	postpause=250;endif nargin<3,	freq='4c';endif nargin<2,	circR=deg2pixel(8.0);else	circR=deg2pixel(circR);endglobal sgFGColour sgBGColour;fg = notnull( sgFGColour, 255 );bg = notnull( sgBGColour, 0   );% show cursorcls(winID,bg);winRect = screen(winID,'Rect');winMid  = round(rectmid( winRect ));setmouse(winMid(1),winMid(2),winID);waitticks(2);showcursor(301);% draw circlecircRect = [ winMid-circR winMid+circR ];screen(winID,'FrameOval',fg,circRect,1);screen(winID,'FillOval',fg,[ winMid-5 winMid+5 ]);nicebeep(freq,100);starttime=clock;flushmouse;range=deg2pixel(0.5);cx=5;cy=5;while (abs(circR-vectsize([ cx cy ]-winMid))>range) & ((cx~=0)|(cy~=0)),	key=0;	while key==0,		[ cx cy key ] = getmouse(winID);	endendrt=etime(clock,starttime);pausems(postpause);hidecursor;% determine angleif (cx==0) & (cy==0),	theta=nan;else	clickPos = [ cx cy ] - winMid;	theta = mod(atan2(-clickPos(2),clickPos(1)),2*pi);end% clear figurescreen(winID,'FillRect',bg,circRect);return
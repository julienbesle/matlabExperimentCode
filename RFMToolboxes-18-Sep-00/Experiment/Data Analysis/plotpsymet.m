function handle = plotpsymet( empfn, type, params, range, threshlevel, gamma, delta )% PLOTPSYMET  Plot a psychometric function%% handle = plotpsymet( empfn, type, params, range, threshlevel )% late 96 -- created (RFM)defarg('type','');defarg('params','');defarg('range',[ NaN NaN ]);if isempty(range), range=[ NaN NaN ]; enddefarg('threshlevel',0.75);defarg('gamma',0.5);defarg('delta',0.01);% hold plotwashold=ishold;if ~washold,	clfendmainaxis=axes('position',[0.1,0.1,0.8,0.8]);hold on% initialize variables holding information for legendleg=putlegend;if ~isempty(empfn),	% plot empirical psychometric function	h=errorbar(empfn(:,1),empfn(:,2),empfn(:,4),'r*-');	leg=putlegend(leg,h(2),'Empirical');	low=min(0.9*empfn(1,1),1.1*empfn(1,1));	high=max(0.9*empfn(end,1),1.1*empfn(end,1));	% plot number of trials	maxcount=max(empfn(:,3))+1;	countaxis=axes('position',[0.95,0.1,0.01,0.8]);	axis([ 1 2 0 maxcount ]);	set(countaxis,'XTickLabel',[]);	set(countaxis,'XTick',[]);	parentcolour=get(get(countaxis,'Parent'),'Color');	set(countaxis,'XColor',parentcolour);	set(countaxis,'Color',parentcolour);	set(countaxis,'TickDir','out');	axes(mainaxis);	ch=plot(empfn(:,1),(gamma-0.1)+((1-gamma)+0.2)*(empfn(:,3)/maxcount),'g:');	leg=putlegend(leg,ch,'Trial count');else	low=0.5*params(1);	high=1.5*params(1);endif ~isempty(type),	% plot fitted function	defrange=[ low high ];	range(find(isnan(range)))=defrange(find(isnan(range)));%	if isempty(range),%		range=[ low high ];%	end	fh=fplot(sprintf('%f+%f*%scdf(x,%f,%f)',gamma,1-(gamma+delta),type,params(1),params(2)), ...		range,'b-');	leg=putlegend(leg,fh,'Fit');end% set range and labelsgraphrange(NaN,NaN,gamma-0.1,1.1);xlabel 'Stimulus Level';ylabel 'Proportion Correct';if (~isempty(empfn)) & (~isempty(type)),	putlegend(leg,2);end% show thresholdif ~isempty(type),	thresh=feval([ type 'inv' ],(threshlevel-gamma)/((1-delta)-gamma),params(1),params(2));	vertline(thresh,':');	text(thresh,gamma,sprintf('   %d%% at %.2f',round(100*threshlevel),thresh));end% reset holdif ~washold,	hold offendreturn
function [ minfit, fitmean, fitstd ] = bootstrap( trials, type, blocks, threshlev, gamma, delta, fname )% BOOTSTRAP  Fit a set of trials and bootstrap to find confidence intervals%% [ minfit, fitmean, fitstd ] = bootstrap( trials, type, blocks, threshlev, gamma, delta, fname )%% input arguments%      - <trials> is an Nx2 matrix of the form [ stimulus_level correct ; stimulus_level correct ; ... ]%      - <type> is 'norm' or 'weibull', indicating the kind of psychometric function to use (default='weibull')%      - <blocks> is the number of fits to make for the bootstrap simulation (default=100)%      - <threshlev> is the percent-correct level that defines threshold (default=0.75)%      - <gamma> is the level of chance performance (default=0.5)%      - <delta> is the guessing rate (default=0.01)%% return arguments%      - <minfit> is a 1x3 matrix giving the fit of the psychometric function to <trials>%           e.g., if type='norm', then minfit is [ mu sigma threshold_level ]%      - <fitmean> is a 1x3 matrix giving the mean of the simulated fits of the%        psychometric function to <trials>, and the mean threshold level;  it%        should be very similar to <minfit>%      _ <fitstd> is a 1x3 matrix giving the standard deviation of the%        simulated fits of the psychometric function to <trials>% 24-Mar-98 -- created (RFM)% 12-Aug-98 -- arguments threshlev, gamma, delta added (RFM)% 21-Sep-98 -- argument fname added (RFM)% 18-Jan-00 -- return arguments changed (RFM)% 29-Jan-00 -- comments on parameters added (RFM)% set default argumentsdefarg('type','weibull');defarg('blocks',100);defarg('threshlev',0.75);defarg('gamma',0.5);defarg('delta',0.01);defarg('fname','');% get fit and find threshold[ fp1 fp2 ] = fitpsymet( trials, type, [], gamma, delta );fthresh = getthresh( threshlev, type, [ fp1 fp2 ], gamma, delta );minfit = [ fp1 fp2 fthresh ];% make subject modelsub = subject( type, [ fp1 fp2 ], gamma, delta );% bootstraplevels=trials(:,1);fits=[];for i=1:blocks,	correct = pollsubject( sub, levels );	[ p1 p2 ] = fitpsymet( [ levels correct ], type );	thresh = getthresh( threshlev, type, [ p1 p2 ], gamma, delta );	fits = [ fits ; p1 p2 thresh ];	fprintf(1,'%d\t%.2f\t%.2f\t%.2f\n',i,p1,p2,thresh);endfitmean=mean(fits,1);fitstd=std(fits,0,1);% save fits and standard errors to fileif ~isempty(fname),	save(fname,'minfit','fitmean','fitstd','fits');endreturn
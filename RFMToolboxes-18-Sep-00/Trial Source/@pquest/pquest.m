function src = pquest( guess, guesssd, threshlev, beta, delta, gamma, ...                       mulstep, range, accuracy, id )% PQUEST  Make wrapper around Psychophysics Toolbox QUEST trial source%% src = pquest( guess, guesssd, threshlev, beta, delta, gamma, ...%               mulstep, range, accuracy, id )%     - <guess> is the initial estimate of the threshold%     - <guesssd> is the standard error of the initial estimate%     - <threshlev> is the percent correct threshold level%     - <beta> is the Weibull slope parameter%     - <delta> is the guessing rate%     - <gamma> is the chance performance level%     - <mulstep> is the multiplicative difference between stimulus levels%     - <range> is the ratio of the largest to the lowest stimulus level%     - <accuracy> is the desired standard error of the threshold%     - <id> is the trial source ID code% 20-Apr-98 -- created (RFM)% 27-Sep-98 -- made object-oriented (RFM)% set default argumentsdefarg('guesssd',2*guess);defarg('threshlev',0.75);defarg('beta',2.0);defarg('delta',0.01);defarg('gamma',0.5);defarg('mulstep',1.05);defarg('range',4.0);defarg('accuracy',0);defarg('id',-1);src.id=id;           % trial source idif accuracy<=0,      % desired standard deviation of	src.finalsd=0;   %   final estimateelse	src.finalsd=log10(1+accuracy);endsrc.final=NaN;       % final estimate will be placed heresrc.trial=0;         % trial count% initialize with Psychophysics Toolbox% src.q=questcreate( log10(guess),log10(guess/(guess-guesssd)),threshlev, ...% 	beta,delta,gamma, ...% 	log10(mulstep),log10(range));src.q=questcreate( log10(guess),log10((guess+guesssd)/guess),threshlev, ...	beta,delta,gamma, ...	log10(mulstep),log10(range));% create objectsrc=class(src,'pquest');return
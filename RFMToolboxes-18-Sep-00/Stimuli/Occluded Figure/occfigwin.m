function occfigure( reel, fig, stimdurF, mask, ...	radiusP, cycperiodF, phi0, ...	occsizeP, occdispP, occgrey, occsolid, gapsizeP, theta )% OCCFIGURE  Make occluded figure display%% occfigure( reel, fig, stimdurF, mask, radiusP, cycperiodF, phi0, %            occsizeP, occdispP, occgrey, gapsizeP, theta )% 23-Oct-98 -- created (RFM)% 18-Apr-99 -- modified for use with od.m% get movie parametersF=reel.nframes;                % number of frames in movieframesizeP=reel.framesize(1);  % display size (assumed square)frameMid=rectmid(reel.view);   % centre of frame% write figure to offscreen window[ FM, FN ]=size(fig);figRect=[ 0 0 FN FM ];figID=screen(reel.destID,'OpenOffscreenWindow',0,figRect);screen(figID,'PutImage',fig,figRect,'srcCopyQuickly');% find top left-hand corner of centred figurefigrect=centrerect(reel.view,figRect);FX0=figrect(1);FY0=figrect(2);% determine occluder regionsocc=centrerect(reel.view,[ 0 0 occsizeP occsizeP ]);shiftd=0.5*(occsizeP+gapsizeP);occRect{1}=shiftrect(occ,-shiftd,-shiftd);occRect{2}=shiftrect(occ,+shiftd,-shiftd);occRect{3}=shiftrect(occ,+shiftd,+shiftd);occRect{4}=shiftrect(occ,-shiftd,+shiftd);occDisp{1}=shiftrect(occRect{1},-occdispP,-occdispP);occDisp{2}=shiftrect(occRect{2},+occdispP,-occdispP);occDisp{3}=shiftrect(occRect{3},+occdispP,+occdispP);occDisp{4}=shiftrect(occRect{4},-occdispP,+occdispP);% get fixation point positionfixRect=centrerect(reel.view,[ 0 0 3 3 ]);% draw each framefor f=1:F,	% clear frame	cls(reel.frameID(f),0);	% draw figure into each frame, except last two	if f<=F-2,		% get position for this frame		phi=(360*(f-1)/cycperiodF)+phi0;		FX=FX0+radiusP*dcos(phi);		FY=FY0-radiusP*dsin(phi);		% draw figure to frame  		screen('CopyWindow',figID,reel.frameID(f),figRect,shiftrect(figRect,FX,FY) );	end	% draw occluders	for i=1:4,		if occsolid,			screen(reel.frameID(f),'FillPoly',0,rect2rotpoly(occRect{i},frameMid,theta));		end		drawpoly(reel.frameID(f),occgrey,rect2rotpoly(occDisp{i},frameMid,theta),2);	end	% draw fixation point	screen(reel.frameID(f),'FillOval',254,fixRect);end% draw post-mask on second-last frameif mask=='w',%	screen(reel.frameID(F-1),'PutImage',random('unid',256,DS,DS),[ 0 0 DS DS ],'srcCopyQuickly');%	d=340;	d=290;	maskRect=centrerect(reel.view,[ 0 0 d d ]);	screen(reel.frameID(F-1),'PutImage',lum2rgb(random('norm',35,10,d,d)),maskRect,'srcCopyQuickly');% tic;% noisemat=random('norm',35,20,framesizeP,framesizeP);% toc% tic;% noisemat=lum2rgb(noisemat);% toc% tic;% screen(reel.frameID(F-1),'PutImage',noisemat,[ 0 0 framesizeP framesizeP ],'srcCopyQuickly');% toc% fprintf(1,'\n');endscreen(figID,'Close');returnfunction p = rect2rotpoly( rect, origin, theta )	p=[ rect(1) rect(2) ; rect(3) rect(2) ; rect(3) rect(4) ; rect(1) rect(4) ];	if theta~=0,		r=[ dcos(theta) -dsin(theta) ; dsin(theta) dcos(theta) ];		p(1,:)=((r*((p(1,:)-origin)'))+origin')';		p(2,:)=((r*((p(2,:)-origin)'))+origin')';		p(3,:)=((r*((p(3,:)-origin)'))+origin')';		p(4,:)=((r*((p(4,:)-origin)'))+origin')';	endreturnfunction drawpoly(winID,c,ptlist,t);	n=size(ptlist,1);	for i=2:n,		screen(winID,'DrawLine',c,ptlist(i-1,1),ptlist(i-1,2),ptlist(i,1),ptlist(i,2),t,t);	end	screen(winID,'DrawLine',c,ptlist(n,1),ptlist(n,2),ptlist(1,1),ptlist(1,2),t,t);return
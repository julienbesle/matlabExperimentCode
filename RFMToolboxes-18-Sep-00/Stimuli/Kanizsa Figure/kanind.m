function kmat = kanind( radiusP, alpha, ringp )% KANIND  Make a Kanizsa inducer%% kmat = kanind( radiusP, alpha, ringp )% 02-Jun-99 -- created (RFM)% 22-Sep-99 -- length of ramp made into an internal variable, <ramplen>;%              size of ramp maintained at [ -1, 1 ] (RFM)% 22-Sep-99 -- error fixed:  (abs(xy)<=((1-ringp)*(radiusP+0.5)) term was not%              used in quadrant clipping until now (RFM)% 20-Jan-00 -- parameter <ringp> allowed to be positive or negative;%              if positive, ring is added outside <radiusP>;  %              if negative, inside (RFM)% set default parametersdefarg('radiusP',50);defarg('alpha',5);defarg('ringp',0);% initialize image matrixouterradiusP=max( (1+ringp)*radiusP, radiusP );innerradiusP=min( (1+ringp)*radiusP, radiusP );kmat=zeros(2*(ceil(outerradiusP)+1)+1);% make coordinate matrices[x,y]=matxy(kmat);x= dcos(alpha)*x + dsin(alpha)*y;y=-dsin(alpha)*x + dcos(alpha)*y;[r,t]=matrt(kmat);t=rad2deg(t)+alpha;% draw anti-aliased circlekmat(find(r<=(outerradiusP-0.5)))=1;f=find((r>(outerradiusP-0.5))&(r<(outerradiusP+0.5)));kmat(f)=0.5+(outerradiusP-r(f));% clip fourth quadrant out of circleq=(x>=-0.5) & (y<=0.5) & (r<=(innerradiusP+0.5));kmat(find( q ))=0;% add ramp to inner edge of ringif abs(ringp)>0,	f=find( q & (r>=(innerradiusP-0.5)) );	kmat(f)=0.5+(r(f)-innerradiusP);end% add ramp to vertical edgef=find( (x>=-0.5) & (x<=0.5) & (y<0.5) & (y>=-(outerradiusP-0.5)) ); %& (r<(innerradiusP-0.5)) );kmat(f)=max( kmat(f), 0.5-x(f) );% add ramp to horizontal edgef=find( (y>=-0.5) & (y<=0.5) & (x>-0.5) & (x<=(outerradiusP-0.5)) ); %& (r<(innerradiusP-0.5)) );kmat(f)=max( kmat(f), 0.5+y(f) );return
function rdc( winID, reel, dim, dbfile, varargin )% RDC  Make a random dot cinematogram.%% imagemat = rnddotcg( winID, reel, [ X Y ], dbfile, dist1, ... )X=dim(1);Y=dim(2);D=size(varargin,2);F=reel.nframes;% calculate border that will center RDC in movie framexborder = round((reel.framesize(1)-X)/2);yborder = round((reel.framesize(2)-Y)/2);% get position list for each distributiondrawlist=[];for d=1:D,	% draw dot to offscreen window	dotRect = [ 0 0 size(varargin{d}.dot) ];	varargin{d}.dotID=screen(winID,'OpenOffscreenWindow',0,dotRect);	screen(varargin{d}.dotID,'PutImage',varargin{d}.dot,dotRect);		dist=varargin{d};	% get initial positions	if isfield(dist,'rnginit'),		rnginit=dist.rnginit;	else		rnginit='rnginit';	end	pos=[];	pos(:,:,1) = feval(rnginit,dist.ndots,[ X Y ]);	% get displacements from user's RNG	displace = feval(dist.rng,dist.ndots,F-1,dist.params);%fprintf(1,'START\n');%for z=1:F-1,%	disp(unique(squeeze(displace(:,:,z)),'rows'));%	disp(mean(squeeze(displace(:,:,z))));%end	% add displacements	for f=2:F,		pos(:,:,f)=pos(:,:,f-1)+displace(:,:,f-1);	end	% wrap, create border, and centre dot	dotSize=size(dist.dot);	delx=floor((dotSize(2)-1)/2);	dely=floor((dotSize(1)-1)/2);	pos(:,1,:)=pmod(pos(:,1,:),X)+xborder-delx;	pos(:,2,:)=pmod(pos(:,2,:),Y)+yborder-dely;	if ~isempty(dbfile),		save(sprintf('rdcdb_%s_%d.mat',dbfile,d),'pos');	end	% append to list		drawlist = cat(1, ...		drawlist, ...		cat(2,pos,dist.dotID*ones(dist.ndots,1,F)) );end% randomize drawing orderdrawlist = drawlist(randperm(size(drawlist,1)),:,:);% clear movie framesfor f=1:reel.nframes,	cls(reel.frameID(f));end% draw RDC into movie framesembed(reel.frameID,drawlist);% free dot windowsfor d=1:D,	screen(varargin{d}.dotID,'Close');endreturn
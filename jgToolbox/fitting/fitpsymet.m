function [ theta1, theta2 ] = fitpsymet( data, dist, init, gamma, delta, maxiterations )% fitpsymet - find maximum-likelihood psychometric function%% [ theta1, theta2 ] = fitpsymet( data, dist, init, gamma, delta )% set default argumentsdefarg('dist','norm');defarg('init','');defarg('gamma',0.5);defarg('delta',0.01);defarg('maxiterations',1000);% check fit typeif ~(strcmp(dist,'norm') | strcmp(dist,'weibull') ),	error(sprintf('Unknown fit type ''%s''',dist));end% set default initialization if necessaryif isempty(init),	init = [ mean(data(:,1)), ifso(strcmp(dist,'norm'),std(data(:,1)),2) ];end% shift to higher values if they are really smalltol = 1e-5;minlevel = min(data(:,1));mind=min(data(:,1));maxd=max(data(:,2));step=(maxd-mind)/100;% set options for minimizationopt=foptions;opt(2)=step; %minlevel;   % parameter toleranceopt(3)=0.000001; % error toleranceopt(14)=maxiterations;    % maximum number of iterations% raw trials?if size(data,2)==2,	fiterr = inline( sprintf( [ ...		'-sum(log( %f+%f*%scdf( trials(find(trials(:,2)==1),1), x(1), x(2) ) ))' ...		'-sum(log( %f-%f*%scdf( trials(find(trials(:,2)==0),1), x(1), x(2) ) ))' ], ...		gamma,1-(gamma+delta),dist,(1-gamma),1-(gamma+delta),dist ), ...		'x', 'trials' );	fit=fmins(fiterr,init,opt,[],data);	theta1=fit(1);	theta2=fit(2);% empirical psychometric function from 'emppsymet.m'?elseif size(data,2)==4,	levels=data(:,1);	ntrials=data(:,3);	ncorrect=round(data(:,2).*data(:,3));	fiterr = inline( sprintf( ...		'-sum(log( binopdf(ncorrect,ntrials,%f+%f*%scdf(levels,x(1),x(2))) ))', ...		gamma,1-(gamma+delta),dist ), 'x', 'levels', 'ntrials', 'ncorrect' );	fit=fmins(fiterr,init,opt,[],levels,ntrials,ncorrect);	theta1=fit(1);	theta2=fit(2);	else	error('Invalid parameter <data>');endreturn% why?% Initial(2)=log(Initial(2));  % before fitting% theta2=exp(fit(2));          % after fitting%(A)%	init = [ -log(0.1)/max(trials(:,1))^2 2 ]; % for weibull
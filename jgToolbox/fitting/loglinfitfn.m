function [params] = loglinfitfn( data, init, method)% function [params] = loglinfitfn( data, init, method, guess )% % Fits a 2-parameter log-linear function to a data set.  DATA is a 3 column vector,% with x values in the first column, y values in the second, and errors% in the third. If there is no third column, a column of ones is put in% its place. The errors are used to weight the fit.% INIT are the initial values for the parameters.% Set the errors to 1 for all points if none are given, so no differential weighting.% If there are errors given, normalize them to a max of 1.defarg('init',100);defarg('method','ss');options=foptions;options(14)=5000;sz = size(data);if sz(2) == 2	data = [data,ones(sz(1),1)];endif 0	for i = 1:sz(1)		if data(i,3) == 0			data(i,3) = mean(data(:,3));		end		if data(i,1) < 1			data(i,1) = 1;		end			endenddata(:,3) = (data(:,3)).^(-1);% the function. constrained to go through 100,100.% minimize least squares errorif method == 'ss'	errfn = inline('sum((((x(1)*(log10(P1(:,1)./100)) + 100) - P1(:,2)).^2)./P1(:,3))',1);elseif method == 'ml'	errfn = inline('-sum(log(x(1)*log10(P1(:,1)./100) + 100))','x','P1'); endparams = fmins(errfn,init,options,[],data);return
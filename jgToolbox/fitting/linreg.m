function [ m, b, mstd, bstd, rxy, F, Fstat ] = linreg( x, y)% function [ m, b, mstd, bstd, rxy, F, Fstat ] = linreg( x, y)%% [ m, b, mint, bint ] = linreg( x, y, p )%% fits to:  y = mx + b% Adapted from:  McGee, V. (1971).  Principles of statistics:  Traditional % and Bayesian.  New York:  Appleton-Century-Crofts.% 13-Aug-99 -- created (RFM)%% 13-Mar-00 -- modified to include F statistic (JMG)% 1 standard errorp = 0.68;% calculate summary quantitiesn=size(x(:),1);sx=sum(x(:));ssx=sum(x(:).^2);sy=sum(y(:));ssy=sum(y(:).^2);sxy=sum(x(:).*y(:));% calculate least-squares fit of coefficientsm=( n*sxy - sx*sy )/( n*ssx-sx*sx );b=( ssx*sy - sxy*sx )/( n*ssx - sx*sx );% find confidence interval for mstdx=std(x(:));stdy=std(y(:));rxy=m*stdx/stdy;q=( stdy*sqrt(1-rxy^2) )/( stdx*sqrt(n-2) );t=tinv(1-(1-p)/2,n-2);mint(1)=m-t*q;mint(2)=m+t*q;mstd = t*q;% find confidence interval for b% (This method assumes m and b are independent, which they are not.)meanx=mean(x(:));meany=mean(y(:));ymin=meany-t*(stdy/sqrt(n));ymax=meany+t*(stdy/sqrt(n));bt=[ ymin-meanx*mint(1) ymin-meanx*mint(2) ymax-meanx*mint(1) ymax-meanx*mint(2) ];bint(1)=min(bt);bint(2)=max(bt);bstd = bint(2)-b;% calculate f statisticsx = x(:);y = y(:);[n,p] = size(x);		% n = number of observations. p = p+1;				% p = number of variables/parameters.x = [ones(n,1),x];		% add a column on ones to the x matrix.dfreg = p-1;			% degrees of freedom for the sum of squares regression.dferr = n-p;			% degrees of freedom for the sum of squares error.df = n-1;				% total degrees of freedom.J = ones(n);			% matrix of ones for finding SSR and SSE.xpx = x'*x;				% values used to find the coefficients.ixpx = inv(xpx);xpy = x'*y;k = ixpx*xpy;bpxpy = k'*x'*y;		% values used to find the sums of squares.ypjy = y'*J*y;ypy = y'*y;SSR = bpxpy - (1/n)*ypjy;	% sums of squares.SSE = ypy-bpxpy;SSTO = ypy-(1/n)*ypjy;MSR = SSR/dfreg;		% mean squares.MSE = SSE/dferr;F = MSR/MSE;			% F-score.Fstat = fpdf(F,dfreg,dferr);	% significance% rsquare = SSR/SSTO;		% rsquared value.return
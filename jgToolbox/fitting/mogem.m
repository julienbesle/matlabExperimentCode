function [ mu, sigma, amplitude ] = mogem( data, ngaussians, niterations )% MOGEM  Fit mixture of Gaussians to data with EM algorithm%% [ mu, sigma, amplitude ] = mogem( data, ngaussians, niterations )% 20/04/98 - created (RFM)data=data(:)';         % convert data to row vectornpoints=size(data,2);  % size of datasetrange = max(data)-min(data);                 % range of data pointsmu    = min(data)+range*rand(1,ngaussians);  % estimated meanssigma = 0.5*range*ones(1,ngaussians);        % estimated standard deviations% density of data point j under Gaussian idensity = zeros(ngaussians,npoints);% responsibility of Gaussian i for data point jresponsibility = zeros(ngaussians,npoints);% constant vectors used repeatedlyonescolgauss=ones(ngaussians,1);onesrowpoints=ones(1,npoints);% iteratefor i=1:niterations,	% calculate densities	for g=1:ngaussians,		density(g,:)=normpdf(data,mu(g),sigma(g));	end	% E-step:  calculate responsibilities	responsibility=density./(onescolgauss*sum(density));	% M-step:  calculate new means and standard deviations	for g=1:ngaussians,		resp=responsibility(g,:);		mu(g)=(data*resp')/sum(resp);		sigma(g)=sqrt( ((data.^2)*resp')/sum(resp) - mu(g)^2 );	endend% calculate relative amplitudes of Gaussiansamplitude=sum(responsibility');amplitude=amplitude/sum(amplitude);return
function [ playtime, interrupts ] = playmovie( reel, ipf, n, onView )% PLAYMOVIE  Copy movie frames to onscreen window%% playtime = playmovie( reel, ipf, n, onView )%     - <reel> is movie reel to play%     - <ipf> is number of interrupts per frame (default=1)%     - <n> is number of times to play movie (default=1)%     - <onView> is rectangle of destination window in which to play%       movie (default=centered)%% See also INITMOVIE, FILMMOVIE, FREEMOVIE.% 30-Oct-97 -- created (RFM)if nargin<4,	playView=reel.destView;else	playView=onView;enddefarg('n',1);defarg('ipf',1);% count interrupts?intcount=(nargout>1);% decide on background colourglobal sgBGColour;bg = notnull( sgBGColour, 0 );% preload functionsscreen('Windows');% preallocate variablesi=0;f=0;start=0;playtime=0;interrupt=0;if intcount==0 & ~isnan(n),	% code to play movie%	' screen(reel.destID,''WaitVBL'',1); ' ...	playcode = [ ...	' for i=1:n, ' ...	'	for f=1:reel.nframes, ' ...	'		screen(reel.destID,''WaitVBL'',ipf); ' ...	'		screen(''CopyWindow'',reel.frameID(f),reel.destID,reel.view,playView); ' ...	'	end; ' ...	' end; ' ...	' screen(reel.destID,''WaitVBL'',ipf); ' ...	' screen(reel.destID,''FillRect'',bg,playView); ' ];	% play movie at high priority	start=getsecs;	rush(playcode,1);	playtime=getsecs-start;else	% code to play movie%	ifso(isinf(n),'while ~charavail,',' for i=1:n, ') ...%	ifso(isinf(n),'getchar;','') ];	playcode = [ ...	' screen(reel.destID,''WaitVBL'',1); ' ...	' interrupt=screen(reel.destID,''PeekVBL''); ' ...	' for i=1:n, ' ...	'	for f=1:reel.nframes, ' ...	'		screen(reel.destID,''WaitVBL'',ipf); ' ...	'		screen(''CopyWindow'',reel.frameID(f),reel.destID,reel.view,playView); ' ...	'	end; ' ...	' end; ' ...	' screen(reel.destID,''WaitVBL'',ipf); ' ...	' interrupt=screen(reel.destID,''PeekVBL'')-interrupt; ' ...	' screen(reel.destID,''FillRect'',bg,playView); ' ];	% play movie	start=getsecs;	eval(playcode);	playtime=getsecs-start;	endif intcount==1,	interrupts=interrupt;endreturn
function plotthresh(files,folder)defarg('folder',pwd);if ~nargin,	[files,folders] = selectmanyfiles('psy');endif iscell(files),	% set up figure	stretch = 2;	figure;	mainaxis1=axes('position',[0.1,0.1,0.8,0.8]);	set(mainaxis1,'XScale','log');	set(mainaxis1,'YScale','log');	hold on;		% initialize variables holding information for legend	leg=putlegend;	% flag for consistency data	conhere = 1;	% flag for sesion-wise data plot	sessionplot = 1;	sessionCondition = [];	sessionThresh = [];	sessionStd = [];		for i = 1:length(files),			% get data		data = readdata(files{i},folders{i});		% for zero condition display in log space		% zeroval = min([min(pos0conditions(find(pos0conditions~=0))),min(pos180conditions(find(pos0conditions~=0))),min(neg0conditions(find(pos0conditions~=0))),min(pos0conditions(find(neg180conditions~=0)))]);		zeroval = intercept;		zeroval = zeroval/10;				% plot thresholds		tempconditions = conditions;		if conditions(1) == 0,			 tempconditions(1) = intercept/10;		end	 		eval(['e',num2str(i),' = errorbar(tempconditions,threshmean,threshstd,[plotsymbol(i),symbolcolor(i)]);']);					threshmax(i) = max(threshmean);		threshmin(i) = min(threshmean);				% figure legend		eval(['leg=putlegend(leg,e',num2str(i),'(2),',quotestring(files{i}),');']); 		% plot fits, if present		if exist('slope','var'),			fitconditions = linspace(tempconditions(1),tempconditions(end),1000);			fitdata = intercept + slope.*(fitconditions);			eval(['f',num2str(i),' = loglog(fitconditions,fitdata,[symbolcolor(i),''-'']);']);			allslopes(i) = slope;			allintercepts(i) = intercept/slope;			allslopesstd(i) = slopestd;			allinterceptsstd(i) = allintercepts(i).*sqrt((interceptstd./intercept)^2 + (slopestd./slope)^2);		end			% efficiency?		if exist('efficiencyslope','var'),			alleff(i) = efficiencyslope;			alleffstd(i) = efficiencyslopestd;		end				% look for consistency data; set flag for later		if ~exist('cond1pc','var'),			conhere = 0;		end			% look single threshold data; save data for later		if length(conditions) == 1			sessionCondition = [sessionCondition,conditions];			sessionThresh = [sessionThresh,threshmean];			sessionStd = [sessionStd,threshstd];		end			end		% alter x-axis to range of data	axis([conditions(1)/stretch conditions(end)*stretch min(threshmin)/stretch,max(threshmax)*stretch]);		% labels	warning off; 	putlegend(leg,2);	xlabel('Condition');	ylabel('Threshold');	titlenamestring = files{1};	title([titlenamestring(1:3),' ',num2str(round(threshpc*100)),'% Correct Thresholds']);	warning on;		% plot efficiencies (or slopes) and internal noise estimates	if exist('allslopes','var') | exist('alleff','var'),		figure;		mainaxis1=axes('position',[0.1,0.1,0.8,0.8]);		hold on;				% initialize variables holding information for legend		subplot(1,2,1);		leg1a=putlegend;				% efficiencies?		if exist('alleff','var')			alleff = alleff.*100;			alleffstd = alleffstd.*100;					h1a = barerr(alleff,alleffstd,'bk');						leg1a=putlegend(leg1a,h1a,[titlenamestring(1:3),' Efficiencies']);			warning off;		 	putlegend(leg1a,2);			xlabel('Condition');			ylabel('Efficiency (%)');			title([titlenamestring(1:3),' Efficiency']);			axis([0 length(alleff)+1 min(alleff)/stretch max(alleff)*stretch]);		else						h1a = barerr(allslopes,allslopesstd,'bk');						leg1a=putlegend(leg1a,h1a,[titlenamestring(1:3),' slopes']);				warning off;		 	putlegend(leg1a,2);			xlabel('Condition');			ylabel('Slope');			title([titlenamestring(1:3),' Slopes']);			axis([0 length(allslopes)+1 min(allslopes)/stretch max(allslopes)*stretch]);		end			% clean up		axis square;		warning on;						% initialize variables holding information for legend		subplot(1,2,2);		leg1b=putlegend;		% plot intercepts		h1b = barerr(allintercepts, allinterceptsstd, 'bk' );		leg1b=putlegend(leg1b,h1b,[titlenamestring(1:3),' x-intercepts']);		% labels		warning off;	 	putlegend(leg1b,2);		xlabel('Condition');		ylabel('X-intercept');		title([titlenamestring(1:3),' X-intercepts']);		axis([0 length(allintercepts)+1 min(allintercepts)/stretch max(allintercepts)*stretch']);		axis square;		warning on;					end			% plot data by session if there is only 1 condition		if length(unique(sessionCondition))==1,		clf;		mainaxis2=axes('position',[0.1,0.1,0.8,0.8]);		%set(mainaxis2,'XScale','log');		set(mainaxis2,'YScale','log');		hold on;				% initialize variables holding information for legend		leg2=putlegend;		% plot thresholds		h2 = barerr(sessionThresh, sessionStd, 'bk' );		leg2=putlegend(leg2,h2,[titlenamestring(1:3),' thresholds']);		%h2 = errorbar([1:length(sessionThresh)],sessionThresh,sessionStd,'r-*');					%leg2=putlegend(leg2,h2(2),[titlenamestring(1:3),' thresholds']);		% labels		warning off;	 	putlegend(leg2,2);		xlabel('Condition');		ylabel('Threshold');		titlenamestring = files{1};		title([titlenamestring(1:3),' ',num2str(round(threshpc*100)),'% Correct Thresholds']);		warning on;			end			% plot consistency data, if it is there	if conhere,		plotconsist(files,folders);	end	end
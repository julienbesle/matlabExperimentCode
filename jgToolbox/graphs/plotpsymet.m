function [h,thresh] = plotpsymet(empfn, type, params, range, threshlevel, gamma, delta, islog)% PLOTPSYMET  Plot a psychometric function%% handle = plotpsymet( empfn, type, params, range, threshlevel, gamma, delta, islog, handle )defarg('type','');defarg('params','');defarg('range','');defarg('threshlevel',0.75);defarg('gamma',0.5);defarg('delta',0.01);defarg('islog',1);% hold plotwashold=ishold;if ~washold,	clfendmainaxis=axes('position',[0.1,0.1,0.8,0.8]);% log or linear? if islog	set(mainaxis,'XScale','log');else	set(mainaxis,'XScale','linear');endhold on% initialize variables holding information for legendleg=putlegend;if ~isempty(empfn),	% get threshold	if ~isempty(type),		thresh=feval([ type 'inv' ],(threshlevel-gamma)/((1-delta)-gamma),params(1),params(2));	end		% plot empirical psychometric function	%h=errorbar(empfn(:,1),empfn(:,2),'r--') %i did this because i'm not sure whether texturedatafile is of required format 	%but it still doesn't work 	h=errorbar(empfn(:,1),empfn(:,2),empfn(:,4),'r--'); % this line is richard's	leg=putlegend(leg,h(2),'Empirical');			% axis limits	low=min(0.9*empfn(1,1),1.1*empfn(1,1));	high=max(0.9*empfn(end,1),1.1*empfn(end,1));	if thresh/10 < low		low = thresh/10;	end	if thresh*10 > high		high = thresh*10;	end			% plot number of trials	maxcount=max(empfn(:,3))+1;	countaxis=axes('position',[0.95,0.1,0.01,0.8]);	axis([ 1 2 0 maxcount ]);	set(countaxis,'XTickLabel',[]);	set(countaxis,'XTick',[]);	parentcolour=get(get(countaxis,'Parent'),'Color');	set(countaxis,'XColor',parentcolour);	set(countaxis,'Color',parentcolour);	set(countaxis,'TickDir','out');	axes(mainaxis);	ch=plot(empfn(:,1),(gamma-0.1)+((1-gamma)+0.2)*(empfn(:,3)/maxcount),'k-.');	leg=putlegend(leg,ch,'Trial count');else	low=0.5*params(1);	high=1.5*params(1);endif ~isempty(type),	% plot fitted function	if isempty(range),		range=[ low high ];	end	fh=fplot(sprintf('%g+%g*%scdf(x,%g,%g)',gamma,1-(gamma+delta),type,params(1),params(2)), ...		range,'b-');	leg=putlegend(leg,fh,'Fit');end% show thresholdif ~isempty(type),	vertline(thresh,':');	text(thresh,gamma,sprintf('   %d%% at %.5g\n  alpha = %.2g, beta = %.3g',round(100*threshlevel),thresh,params(1),params(2)));end% set range and labels% richard's old settings: graphrange(NaN,NaN,gamma-0.1,1.1);graphrange(low,high,gamma-0.1,1.1);xlabel 'Stimulus Level';ylabel 'Proportion Correct';if (~isempty(empfn)) & (~isempty(type)),	putlegend(leg,2);end% reset holdif ~washold,	hold offendreturn
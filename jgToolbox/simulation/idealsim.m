% IDEALSIM.M% 27-Aug-98 -- created (RFM)% load templatesfprintf(1,'loading stimuli ... ');load([ pwd 'Stimuli:letter3' ]);template=letter3;D=size(template,2);      % number of templatesN=size(template{1},1);   % size of templates (assumed square)fprintf(1,'\n');T=50;         % trials per stimulusk=166500000;  % contrast variance of noise% use each template as stimulussigmean=[];sigcov=[];pcorr=[];for d=1:D,	% many trials	fprintf(1,'STIMULUS %d ... ',d);	ccrec=[];	correct=0;	for t=1:T,		if mod(t,10)==0,			fprintf(1,'%d ',t);		end			% add noise to stimulus		stim=template{d}+sqrt(k)*Sp*randn(N)/(N^2);				% cross-correlate with each template		for s=1:D,			cc(s)=sum(sum( stim.*template{s} ));		end		ccrec=[ ccrec cc(:) ];				% pick template with maximum response		[ v i ]=max(cc);		correct=correct+(i==d);		end	fprintf(1,'\n');		% get mean signal strengths	sigmean(:,d)=mean(ccrec')';	% get signal covariance matrix	sigcov=cat(3,sigcov,cov(ccrec')');		% determine proportion correct	pcorr(d,1)=(correct/T);	end% get signal covariancesigcov=mean(sigcov,3);sigmeansigcovpcorr(:)return
% IDEAL.M  Simulate an ideal observer that is statistically equivalent%          to one that identifies templates in bandpass filtered %          Gaussian noise% 26-Aug-98 -- created (RFM)% To do%     - reduce dimension of multivariate distribution by looking at%       T-1 signals, Ss-Si, rather than T signals, Si%     - use an adaptive trial source rather than minimizing idealpcorr.m%     - map desired confidence interval to number of trials%     - look for analytic or numeric expression for thresholdstim='letter';% load and preprocess templatesif ~exist('prep','var'),	tic;	load(sprintf('%sStimuli:%s',pwd,stim));	eval(sprintf( 'prep=idealprep(%s);',stim ));	clear(stim);	fprintf(1,'templates loaded and preprocessed (%.1f s)\n',toc);end% get unit-contrast-energy noise power spectrumtic;noisestd=ones(prep.N);               % unfiltered white noisenoiseps=noisestd.^2;                 % noise power spectrumnoiseps=noiseps/sum(sum(noiseps));   % set contrast energy to 1.0fprintf(1,'noise power spectrum generated (%.1f s)\n',toc);% calculate signal covariance matrixtic;sigcov=idealsigcov(prep,noiseps);fprintf(1,'signal covariance matrix calculated (%.1f s)\n',toc);% find ideal observer's thresholdtic;signalce=sum(sum(prep.template{1}.^2));init=10000*signalce;[ noisece, t ]=idealthresh( prep.sigmean, sigcov, 0.75, .005, init );fprintf(1,'ideal observer''s 0.75 contrast energy threshold is %.2f (%.1f s, %d samples)\n',noisece,toc,sum(t));fprintf(1,'     ( SNR = %.5f )\n',sqrt(signalce/noisece));return
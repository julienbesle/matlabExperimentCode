function idealkaniza(stimtype,maxtrials)% function kaniza(name,stimtype,maxtrials,mainscrs)%% finds threshold to use in the feature experiment% 'name' is the name the subject, in initials% default screen is 1. default number of trials is 1500.%% July 18-19 1998  JMG  U of Toronto Vision Labif nargin	% change directories to the main folder	cf;	jg feature;		defarg('stimtype','modal');		% default trials	if nargin < 2		maxtrials = 10000;	else		maxtrials = str2num(maxtrials);	end		% constants	fileshareoff = 1;	nzcn = .1414;	nzvar = nzcn^2;	filename = ['idealkaniza',lower(stimtype),'.dat'];	sourcename = ['idealkaniza',lower(stimtype),'src'];	pausetrials = maxtrials/4;		% amodal condition	if ~strcmp(lower(stimtype),'amodal')		ringp = 0;	else		ringp = .2;	end	% control condition	if ~strcmp(lower(stimtype),'control')		control = 0;	else		control = 1;	end	% real condition	if ~strcmp(lower(stimtype),'real')		real = 0;	else		real = 1;	end	% mask condition	if strcmp(lower(stimtype),'mask');		mask = 1;		sinfreq = 8;		sindeg = 45;		sinphz = 0;		fixationcolor = 120;	else		mask = 0;	end		% uses RFM's kaniza toolbox	kansz = 100;		% 128 64	100	induceRad = 16;		% 21  10	16	support = .25;	angledeg = 1.75;	% 1.75	image1name = 'fat';	image2name = 'thin';	if ~mask		image1 = mkfatthinmat(kansz, induceRad, support, angledeg*(-1),ringp, 1,-1,0,control,real,0);		image2 = mkfatthinmat(kansz, induceRad, support, angledeg, ringp, 1, -1,0,control,real,0);	else		image1 = mkfatthinmatgrating(kansz, induceRad, support, angledeg*(-1),ringp, 1,-1,0,control,real,0,sinfreq,sindeg,sinphz);		image2 = mkfatthinmatgrating(kansz, induceRad, support, angledeg, ringp, 1, -1,0,control,real,0,sinfreq,sindeg,sinphz);	end			image1 = scalearb(image1,-1,0);	image2 = scalearb(image2,-1,0);	var1 = std(image1(:))^2;	var2 = std(image2(:))^2;			% parameters for quest	guess = 5e-5;	guesssd = 5*guess;	pc = .75;	beta = 2.5;	delta = .01;	gamma = .5;	mulstep = 10^.01;	range = 10;	accuracy = 0;	id = 1; 			% open the data file and write the header	if exist(filename) ~= 2		fwid = fopen(filename,'a+');					savecomment(fwid,['Data File Name: ',filename]);		savecomment(fwid,'kaniza experiment');		savecommand(fwid,['stimtype = ',quotestring(stimtype),';']); 		savecommand(fwid,['kansz = ',num2str(kansz),'; induceRad = ',num2str(induceRad),';support = ',num2str(support),';angledeg = ',num2str(angledeg),'; ringp = ',num2str(ringp),'; control = ',num2str(control),'; real = ',num2str(real),';']);		savecommand(fwid,['noisevar = ',num2str(nzvar),';']);		savecommand(fwid,['pc=',num2str(pc),'; initialalpha = ',num2str(guess),'; initialbeta = ',num2str(beta),'; gam = ',num2str(gamma),';']);		savecommand(fwid,['delta = ',num2str(delta),'; mulstep = ',num2str(mulstep),'; quitSD = ',num2str(accuracy),'; initialSD = ',num2str(guesssd),';']);		savecommand(fwid,vars2str(mask));		if mask			savecommand(fwid,vars2str(sinfreq,sindeg,sinphz));		end		savecommand(fwid,['image1name = ',quotestring(image1name),'; image2name = ',quotestring(image2name),';']);		savecommand(fwid,'image1id = 1; image2id = 2;');		savecommand(fwid,'trial = 1; sequence = 2; response = 3; correct = 4; stimlevel = 5; currsd = 6; randnstate1 = 7; randnstate2 = 8;');		savedatetime(fwid);	else		fwid = fopen(filename,'a+');		savedatetime(fwid);		eval(['load ',sourcename]);			end	% turn off filesharing	if fileshareoff		status=fs('Off');	end			% initialize	sequence = coinflip(maxtrials,.5)+1;	responses = sequence*0 + 1;	if ~exist('trialsrc','var')		trialsrc = mkpquest(guess,guesssd,pc,beta,delta,gamma,mulstep,range,accuracy,id);		s1r1 = zeros(size(image1));		s1r2 = s1r1;		s2r1 = s1r1;		s2r2 = s1r1;	end	% display the images	s1=figure;	hold on;	subplot (2,2,1), imshow(scale(s1r1));xlabel(['s=',image1name,'/r=',image1name]);	subplot (2,2,2), imshow(scale(s1r2));xlabel(['s=',image1name,'/r=',image2name]);	subplot (2,2,3), imshow(scale(s2r1));xlabel(['s=',image2name,'/r=',image1name]);	subplot (2,2,4), imshow(scale(s2r2));xlabel(['s=',image2name,'/r=',image2name]);	drawnow;			% main loop	for trial = 1:maxtrials  				% get the next stimulus level		[trialsrc,contrast,id] = gettrial(trialsrc);		% if criterion sd has been met break the loop				if isnan(contrast)			break;		end		% make the image		randnstate = randn('state');		nz=cliprandn(size(image1),2);		nz=nz*sqrt(nzvar/std(nz(:))^2);		eval(['currimage=image',num2str(sequence(trial)),'*sqrt(contrast/var',num2str(sequence(trial)),')+nz;']);				% cross correlate		corr1 = sum(sum(currimage.*image1));		corr2 = sum(sum(currimage.*image2));				% get the response		if corr1 > corr2			responses(trial) = 1;		else			responses(trial) = 2;		end							% accuracy		correct=sequence(trial)==responses(trial);			% display		printstr(['trial # ',num2str(trial),'  variance = ',num2str(contrast),'   correct = ', num2str(correct),'.']); 		if ~rem(trial,500)			subplot (2,2,1), imshow(scale(s1r1));xlabel(['s=',image1name,'/r=',image1name]);			subplot (2,2,2), imshow(scale(s1r2));xlabel(['s=',image1name,'/r=',image2name]);			subplot (2,2,3), imshow(scale(s2r1));xlabel(['s=',image2name,'/r=',image1name]);			subplot (2,2,4), imshow(scale(s2r2));xlabel(['s=',image2name,'/r=',image2name]);			drawnow;			end			% save the data		eval(['s',num2str(sequence(trial)),'r',num2str(responses(trial)),'= s',num2str(sequence(trial)),'r',num2str(responses(trial)),'+nz;']);		currsd=questsd(trialsrc.q);		data=[trialsrc.trial,sequence(trial),responses(trial),correct,contrast,currsd,randnstate(1),randnstate(2)];		fprintf(fwid,'%g\t',data); 		fprintf(fwid,'\n');		% update trial source		trialsrc = telltrial(trialsrc,contrast,correct);					end	% final threshold estimate	if isnan(trialsrc.final)		finalest=contrast;	else		finalest=trialsrc.final;	end	savecommand(fwid,['if exist(''finalest'',''var''), finalest = [finalest,',num2str(finalest),']; else, finalest = ',num2str(finalest),'; end']);	% save the trialsource	eval(['save ',sourcename,' trialsrc s1r1 s1r2 s2r1 s2r2']);		% close the file	fclose(fwid);		else		printstr('Not enough input arguments.')endreturn
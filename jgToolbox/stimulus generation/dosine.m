function grating = dosine(cpi,sz,deg,phz)% function grating = dosine(cpi,sz,deg,phz)%%% parameters:%	cpi	  -		the frequency of the grating%	sz	  - 	the nxn size of the final matrix, in pixels.%	deg	  -		(optional) the orientation of the grating.%				default (and 0/180) is vertical. default and 90%				are fast; rotation is slow.%	phz	  -		(optional) the phase of the grating in degrees,% 				relative to sz/2+1. default (and 0) is + sine.%	% July 16, 1998  JMG U of T Vision Lab% default orientation is 0 deg (vertical)if nargin < 3 	deg = 0;end% default phase is 0 (+sine)if nargin < 4	phz = 0;else	phz = deg2rad(phz);end		if nargin>2 	% params	center = sz/2+1;	% temporarily double the image size and frequency to compensate for rotation	if deg ~= 0 & deg ~= 180 & abs(deg)~=90		sz=2*sz;		center = sz/2+1;		cpi=cpi*2;	end	% make the grating (note: in +sine phase, DC component is zero)	if abs(deg)==90		grating = sin(2*pi*cpi*(((0:sz-1)-center)./sz)+phz)'*ones(1,sz);	else		grating = ones(1,sz)'*sin(2*pi*cpi*(((0:sz-1)-center)./sz)+phz);	end		% rotate if necessary	if deg ~= 0 & deg ~= 180 & abs(deg)~=90		grating = getcenter(imrotate(grating,deg),sz/2,sz/2);	end		else	% error handling	printstr('Not enough input arguments.');	grating = -1;endreturn
function gabor = dogabor(cpi,cpw,sz,deg,phz)% function gabor = dogabor(cpi,cpw,sz,deg,phz)%% makes a square 2d gabor (+/-2 sd Gaussian window)%% parameters:%	cpw	  -		the number of cycles falling within the%				Gaussian window (+/- 2 standard deviations) %	cpi	  -		the frequency of the gabor%	sz	  - 	the nxn size of the final matrix, in pixels.%	deg	  -		(optional) the orientation of the gabor.%				default (and 0/180) is vertical. default and 90%				are fast; rotation is slow.%	phz	  -		(optional) the phase of the grating in degrees,% 				relative to sz/2+1. default (and 0) is + sine.%	% July 16, 1998  JMG U of T Vision Lab% default orientation is 0 deg (vertical)if nargin < 4 	deg = 0;end% default phase is 0 (+sine)if nargin < 5	phz = 0;else	phz = deg2rad(phz);end		if nargin>2 	% params for the Gaussian; 4 standard deviations = cpw*wavelength	sigma =  (cpw*(sz/cpi))/4;	center = sz/2+1;	gauss = dogauss2d(sz,sigma);	% make the grating (note: in +sine phase, DC component is zero)	if abs(deg)==90		gabor = sin(2*pi*cpi*(((0:sz-1)-center)./sz)+phz)'*ones(1,sz);	else		gabor = ones(1,sz)'*sin(2*pi*cpi*(((0:sz-1)-center)./sz)+phz);	end		% rotate if necessary	if deg ~= 0 & deg ~= 180 & abs(deg)~=90		gabor = getcenter(imrotate(gabor,deg),sz,sz);	end			% the final gabor	gabor = gauss.*gabor;else	% error handling	printstr('Not enough input arguments.');	gabor = -1;endreturn
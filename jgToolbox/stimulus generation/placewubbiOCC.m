function [w] = placewubbiOCC(m,occszP,occC,bgC,stretchLR,stretchUD,rotation,blur,blurfreq,bluroctaves,offsetP)% make the double wubbiw = [ [zeros(size(m)),m];[m,zeros(size(m))] ];w = imrotate(w,rotation,'bilinear');w = imresize(w,size(w)+[stretchUD,stretchLR],'bilinear');% make the matrix square and evensz = size(w);if sz(1)<sz(2)	diff = sz(2)-sz(1);	if rem(diff,2)		w = pad(w,[floor((diff-1)/2),0,0,(floor((diff-1)/2))+1],bgC);	else		w = pad(w,[floor((diff)/2),0,0,floor((diff)/2)],bgC);	endelseif sz(1)>sz(2)	diff = sz(1)-sz(2);	if rem(diff,2)		w = pad(w,[0,floor((diff-1)/2),(floor((diff-1)/2))+1,0],bgC);	else		w = pad(w,[0,floor((diff)/2),(floor((diff)/2)),0],bgC);	endend	sz = size(w);if rem(sz(1),2)	w = pad(w,[1,1,0,0],bgC);end% offset right figureif offsetP	wleft = w(1:end,1:end/2);	wright = w(1:end,end/2+1:end);	wleft = shiftud(wleft,-(offsetP/2));	wright = shiftud(wright,(offsetP/2));	w = [wleft,wright];	end% anti-aliasif blur,	ftw = fftshift(fft2(w));	filt=makeGaussfilt(max(size(ftw)),blurfreq,bluroctaves,'l',1);	w=real(ifft2(fftunshift(filt.*ftw)));end% place the occluderif occszP	occ = imrotate(ones(occszP)*inf,rotation);	w = putcenter(w,occ,'add');	locs = find(w==inf);	w(locs) = ones(size(locs))*occC;endreturn;
function [class,classtol,rawclass] = doclasscolor(file,folder,filesuppress,dispsuppress,inducesuppress)defarg('folder',pwd);defarg('filesuppress',0);defarg('dispsuppress',0);defarg('inducesuppress',0);%tol = 1.96; % .05tol = 2.58; % .01if ~exist('file','var');	[file,folder] = uigetfile('*.dat','Choose File');endkanr = 25;kang = 50;kanb = 50;% main loopif file		% get the data	data = readdata(file,folder);	period=findstr(file,'.');	if isempty(period)==0,		file=[file(1:period-1),'src.mat'];	end	cd(folder);	eval(['load ',file]);	kernal = [1 2 3 2 1];	kernal = kernal'*kernal;	% summed noise files s1r1 s1r2 s2r1 s2r2 are stored in 'src.mat' file	s1r1trials = sum(data(:,sequence)==1 & data(:,response)==1);	s1r2trials = sum(data(:,sequence)==1 & data(:,response)==2);	s2r1trials = sum(data(:,sequence)==2 & data(:,response)==1);	s2r2trials = sum(data(:,sequence)==2 & data(:,response)==2);	fprintf(1,['Total trials = ',num2str(size(data,1)),'.\n']);		% divide by # of trials	s1r1 = s1r1/s1r1trials;	s1r2 = s1r2/s1r2trials;	s2r1 = s2r1/s2r1trials;	s2r2 = s2r2/s2r2trials;		% smoothed image	rawclass = s1r2-s1r1+s2r2-s2r1;	class = conv2(rawclass,kernal,'same');	% statistical image	classtol = class;	squarekernal = sqrt(sum(sum(kernal.^2)));	s1r1var = noisevar/s1r1trials;	s1r2var = noisevar/s1r2trials;	s2r1var = noisevar/s2r1trials;	s2r2var = noisevar/s2r2trials;	classvar = s1r1var + s1r2var + s2r1var + s2r2var;	smoothstd = squarekernal*sqrt(classvar);	classmaxval = tol*smoothstd;			%classmaxval = tol*std(classtol(:));			tollocs = find(abs(classtol)<classmaxval);	postollocs = find(classtol>classmaxval);	negtollocs = find(classtol<-classmaxval);	classtol(tollocs) = .5;	classtol(postollocs) = 1;	classtol(negtollocs) = 0;		% scale	numstd = 6; 	classmean = mean(class(:)); 	classstd = std(class(:)); 	class = (class-classmean)./(numstd*classstd) + .5; 		class(find(class > 1)) = 1;	class(find(class < 0)) = 0;% 	classmean = mean(class(:));% 	class = scale(class-classmean + .5);		% for kaniza	if strcmp(stimtype,'amodal')		ringp = .2;	else		ringp = 0;	end		if ~inducesuppress		kaniza = mkfatthinmat(kansz, induceRad, support,0,ringp, .5,-1,0,control,0,0);		classvar = .025;		tolvar = .01;		kanvar = std(kaniza(:))^2;		kaniza = kaniza*sqrt(classvar/kanvar);		kanizatol = kaniza*sqrt(tolvar/kanvar);	else		kaniza = zeros(kansz);		kanizatol = zeros(kansz);	end	% make 3d color images	tempclass = scale(class);	class(:,:,1) = tempclass;	class(:,:,2) = tempclass;;	class(:,:,3) = tempclass;;	tempclass = scale(classtol);	classtol(:,:,1) = tempclass;	classtol(:,:,2) = tempclass;;	classtol(:,:,3) = tempclass;;	kanlocs = find(scale(kaniza)~=0);		tempkaniza = scalearb(-kaniza,-.5,.5);	tempkaniza(kanlocs) = 0;	kaniza(:,:,1) = tempkaniza.*kanr;	kaniza(:,:,2) = tempkaniza.*kang;	kaniza(:,:,3) = tempkaniza.*kanb;		classtol = uint8(round(scalearb(classtol+kaniza,0,255)));	class = uint8(round(scalearb(class+kaniza,0,255)));	if ~dispsuppress		figure; imshow(class);		figure; imshow(classtol);		drawnow;	end	if ~filesuppress			% write to file		period=findstr(file,'.');		file=file(1:period-4);		[newfile,newfolder] = uiputfile([file,'class.mat'],'Save File As');			if newfile					save([newfolder,newfile],'class','classtol');		end	end	end
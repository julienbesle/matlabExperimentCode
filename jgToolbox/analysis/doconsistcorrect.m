function doconsistcorrect(file,folder,suppressdlg,newfile,newfolder)% look for file and folder namesif ~exist('file','var');	[file,folder] = uigetfile('*.dat','Choose First File');endif ~exist('folder','var')	folder = pwd;end% tags% trial = 1; sequence = 2; response = 3; correct = 4; stimlevel = 5;% condition = 6; randnstate1 = 7; randnstate2 = 8;if file		% flag to suppress the prompt for file saving	defarg('suppressdlg',1);		selectfiles = {file};	data1 = [];	data2 = [];	for i = 1:size(selectfiles,2)					% find out if there are repititions		tempdata = readdata(selectfiles{i},folder);		minlocs = find(tempdata(:,trial)==1);		if length(minlocs) == 1			printstr('One or more files do not have repeated trials');			return;		end		maxtrial = tempdata(end,trial);		maxlocs = find(tempdata(:,trial)==maxtrial);		data1 = [data1;tempdata(1:maxlocs(1),1:condition)];		data2 = [data2;tempdata(minlocs(2):end,1:condition)];	end		data = [data1;data2];	data(:,trial) = [1:size(data,1)/2,1:size(data,1)/2]';		% data file	period=findstr(file,'.');	if isempty(period)==0,		file=file(1:period-1);	end	defarg('newfile',[file,'.cst']);	defarg('newfolder',folder);		% separate data	maxtrials = max(data(:,trial));	data1 = data(1:maxtrials,:);	data2 = data(maxtrials+1:end,:);	conds = unique(data1(:,condition));	pccorrect = [];	pcagreematrix = [];		pccorrectSE = [];						% e=sqrt(p*(1-p)/n);  standard error	pcagreeSEmatrix = [];		INCpcagreematrix = [];		CORpcagreematrix = [];	ntrials = [];		% compute percentage agreements	for currcond = 1:length(conds)		condlocs = find(data1(:,condition)==conds(currcond));		conddata1 = data1(condlocs,:);		conddata2 = data2(condlocs,:);		levels = unique(conddata1(:,stimlevel));		levelsmatrix(:,currcond) = levels;		for currlevel = 1:length(levels)			levellocs = find(conddata1(:,stimlevel)==levels(currlevel));			levellocscorrect1 = find(conddata1(:,correct)==1);			levellocs = intersect(levellocs,levellocscorrect1);			ntrials(currlevel,currcond) = length(levellocs)*2;			leveldata1 = conddata1(levellocs,:);			leveldata2 = conddata2(levellocs,:);			pccorrect(currlevel,currcond) = [((sum(leveldata1(:,correct))+sum(leveldata2(:,correct)))/(size(leveldata1,1)*2))*100];			pccorrectSE(currlevel,currcond) = sqrt(pccorrect(currlevel,currcond)*(100-pccorrect(currlevel,currcond))/(size(leveldata1,1)*2));			pcagreematrix(currlevel,currcond) = [(sum(leveldata1(:,response)==leveldata2(:,response))/size(leveldata1,1))*100];			pcagreeSEmatrix(currlevel,currcond) = sqrt(pcagreematrix(currlevel,currcond)*(100-pcagreematrix(currlevel,currcond))/size(leveldata1,1));			INClocs = find(leveldata1(:,correct)==0);				INCleveldata1 = leveldata1(INClocs,:);			INCleveldata2 = leveldata2(INClocs,:);						INCpcagreematrix(currlevel,currcond) = [(sum(INCleveldata1(:,response)==INCleveldata2(:,response))/size(INCleveldata1,1))*100];						CORlocs = find(leveldata1(:,correct)==1);				CORleveldata1 = leveldata1(CORlocs,:);			CORleveldata2 = leveldata2(CORlocs,:);			CORpcagreematrix(currlevel,currcond) = [(sum(CORleveldata1(:,response)==CORleveldata2(:,response))/size(CORleveldata1,1))*100];		end	end	% plot psychophysical function	handle = figure;	handle = plot(pcagreematrix,pccorrect,'r*-');	xlabel('Percent Agreement');	ylabel('Percent Correct');	title('PCAgree Plot');	% open file	if ~suppressdlg		[newfile,newfolder] = uiputfile(newfile,'Save File As');	end		if newfile		fwid = fopen([newfolder,newfile],'w+');		savecommand(fwid,['cond = [',num2str(conds'),'];']);		commandstring = [];		counter = 1;		%for i = 1:length(conds)		%	commandstring = [commandstring,'cond',num2str(i),'stim=',num2str(counter),';'];		%	counter = counter + 1;		%end		for i = 1:length(conds)			commandstring = [commandstring,'cond',num2str(i),'pc=',num2str(counter),';'];			counter = counter + 1;		end		for i = 1:length(conds)			commandstring = [commandstring,'cond',num2str(i),'pcSE=',num2str(counter),';'];			counter = counter + 1;		end		for i = 1:length(conds)			commandstring = [commandstring,'cond',num2str(i),'pa=',num2str(counter),';'];			counter = counter + 1;		end		for i = 1:length(conds)			commandstring = [commandstring,'cond',num2str(i),'paSE=',num2str(counter),';'];			counter = counter + 1;		end		for i = 1:length(conds)			commandstring = [commandstring,'cond',num2str(i),'trials=',num2str(counter),';'];			counter = counter + 1;		end			savecommand(fwid,commandstring);		finalmatrix = [pccorrect,pccorrectSE,pcagreematrix,pcagreeSEmatrix,ntrials];		for i = 1:size(finalmatrix,1)			fprintf(fwid,'%d\t',finalmatrix(i,:)); 			fprintf(fwid,'\n');		end		fclose(fwid);				newfile2 = [newfile,'.igor'];		newfolder2 = newfolder;		if ~suppressdlg			[newfile2,newfolder2] = uiputfile([newfile,'.igor'],'Save Igor File As');		end			if 0		if newfile2			del(newfile2);			dat2igor(newfile,newfolder,newfile2,newfolder2);		end		end		tilefigs;			% the file		% edit([newfolder,newfile]);		end			end
function doclassraw(ntrials,tol,file,folder)% function doclassraw(ntrials,tol,file,folder)%% compute classification images from raw data and random% number seeds. output is the same as 'doclass.m'.%% March 28, 2000 jmg% get fileif nargin < 4,	[file,folder] = uigetfile('*.dat','Choose File');endif file,			% p level	defarg('tol',1.96); % tol = 1.96 --> p =.05; tol = 2.58 --> p = .01	% convolution kernel	kernal = [1 2 3 2 1];	kernal = kernal'*kernal;		% get data	data = readdata(file,folder);	defarg('ntrials',size(data,1));		% bins	s1r1 = zeros([imagesize imagesize]);	s1r2 = s1r1;	s2r1 = s1r1;	s2r2 = s1r1;	s1r1trials = 0;	s2r1trials = s1r1trials;	s1r2trials = s1r1trials;	s2r2trials = s1r1trials;	responses = data(:,response);	sequences = data(:,sequence);	% initialize display	fprintf(1,'\n\n\n\n\n')	figure;		% separate data into bins	for currtrial = 1:ntrials			randn('state',[data(currtrial,randnstate1);data(currtrial,randnstate2)]);		nz=cliprandn([imagesize imagesize],2);		nz=nz*sqrt(noisevar/std(nz(:))^2);		eval(['s',num2str(sequences(currtrial)),'r',num2str(responses(currtrial)),'= s',num2str(sequences(currtrial)),'r',num2str(responses(currtrial)),'+nz;']);			eval(['s',num2str(sequences(currtrial)),'r',num2str(responses(currtrial)),'trials = s',num2str(sequences(currtrial)),'r',num2str(responses(currtrial)),'trials+1;']);			fprintf(1,'\b\b\b\b%4d',currtrial);		if rem(currtrial,100)==0,			imshow(scale([(s1r1/s1r1trials+s2r1/s2r1trials) - (s1r2/s1r2trials+s2r2/s2r2trials)]));		end			end	% divide by # of trials	s1r1 = s1r1/s1r1trials;	s1r2 = s1r2/s1r2trials;	s2r1 = s2r1/s2r1trials;	s2r2 = s2r2/s2r2trials;		% smoothed image	rawclass = s1r2-s1r1+s2r2-s2r1;	class = conv2(rawclass,kernal,'same');	% statistical image	classtol = class;	squarekernal = sqrt(sum(sum(kernal.^2)));	s1r1var = noisevar/s1r1trials;	s1r2var = noisevar/s1r2trials;	s2r1var = noisevar/s2r1trials;	s2r2var = noisevar/s2r2trials;	classvar = s1r1var + s1r2var + s2r1var + s2r2var;	smoothstd = squarekernal*sqrt(classvar);	classmaxval = tol*smoothstd;			tollocs = find(abs(classtol)<classmaxval);	postollocs = find(classtol>classmaxval);	negtollocs = find(classtol<-classmaxval);	classtol(tollocs) = .5;	classtol(postollocs) = 1;	classtol(negtollocs) = 0;		% scale	numstd = 6; 	classmean = mean(class(:)); 	classstd = std(class(:)); 	class = (class-classmean)./(numstd*classstd) + .5; 		class(find(class > 1)) = 1;	class(find(class < 0)) = 0;	% reverse polarity ?	if exist('polarity','var'),		if strcmp(polarity,'neg'),			rawclass = rawclass*(-1);			class = class*(-1);			classtol = classtol*(-1);		end	end	% flip ?	if exist('orientation','var'),		if orientation == 180,			rawclass = rot90(rot90(rawclass));			class = rot90(rot90(class));			classtol = rot90(rot90(classtol));		end	end	% display	clf;	fprintf(1,'\n');	subplot(2,2,1);	imshow(scale(rawclass));	subplot(2,2,2);		imshow(class);	subplot(2,2,3);	imshow(classtol);	drawnow;		% save	cd(folder);	file = [rmextension(file),'class.mat'];	save([folder,file],'data','class','classtol','rawclass','s1r1trials','s1r2trials','s2r1trials','s2r2trials','ntrials');	endreturn		
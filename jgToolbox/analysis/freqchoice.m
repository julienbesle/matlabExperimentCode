function [freqstruct] = freqchoice(file,folder);% look for file and folder namesif ~exist('file','var');	[file,folder] = uigetfile('*.dat','Choose First File');endif ~exist('folder','var')	folder = pwd;endif file	% for mutiple files	cd(folder)	currfiles = dir('*.dat');	[selectfiles,ok] = dolistdlg(currfiles,'name','Select All Files To Merge:',[160 300],'multiple');	if ~ok		selectfiles = {file};	end	data = [];	for i = 1:size(selectfiles,2)					tempdata = readdata(selectfiles{i},folder);		data = [data;tempdata];	end		% data file	period=findstr(file,'.');	if isempty(period)==0,		file=file(1:period-1);	end	defarg('newfile',[file,'.freq']);	defarg('newfolder',folder);	% tags in the data file	% trial = 1; sequence = 2; response = 3;	% correct = 4; stimlevel = 5; condition = 6;	% randnstate1 = 7; randnstate2 = 8;		% for consistency	%maxtrial = data(end,trial);	%maxlocs = find(data(:,trial)==maxtrial);	%minlocs = find(data(:,trial)==1);	%data1 = data(1:maxlocs(1),:);	%data2 = data(minlocs(2):end,:);	%samelocs = find(data1(:,response)==data2(:,response));	%data = [data1(samelocs,:);data2(samelocs,:)];	freqstruct.levels = unique(data(:,stimlevel));	freqstruct.diffstim = unique(data(:,sequence));	numlevels = length(freqstruct.levels);	numdiffstim = length(freqstruct.diffstim);	for i=1:numlevels		levellocs = find(data(:,stimlevel) == freqstruct.levels(i));		for j = 1:numdiffstim			freqstruct.numchose(j,i) = sum(data(levellocs,response)==freqstruct.diffstim(j));			freqstruct.numshown(j,i) = sum(data(levellocs,sequence)==freqstruct.diffstim(j));					end	end	freqstruct.normchose = freqstruct.numchose-freqstruct.numshown;	endreturn;	
function [kernel3d] = mkkernel3d(kernel1d)if size(kernel1d,1) > 1	kernel1d = kernel1d';endkernel2d = kernel1d'*kernel1d;numpts = length(kernel1d);kernel3d = zeros(numpts,numpts,numpts);for i = 1:numpts	for j = 1:numpts		for k = 1:numpts% 			disfromcenter = round(sqrt(i^2 + j^2 + k^2));% 			if disfromcenter > numpts% 				disfromcenter = numpts% 			end			kernel3d(i,j,k) = kernel2d(i,j);		end		endend	% numslice = length(kernel1d);% isodd = rem(numslice,2);% kernel3d = zeros(size(kernel2d,1),size(kernel2d,2),numslice);% vals = unique(kernel2d);% kernel3d(:,:,ceil(numslice/2)) = kernel2d;% for i = 1:ceil(numslice/2)-1% 	temp = getcenter(kernel2d,centersizes(i))	% 					% end	
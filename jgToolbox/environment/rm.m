function rm(file,str)% function rm(file,str)%% Use with jg: jg rm <shortcutname>% General use: rm <masterfile> <shortcutname>%% Removes paths to the 'jg' function ( or richard's 'go' function).% It looks for the path indicator string '% paths' and removes% the a path from the file, with the passed string as the shortcut. % The parameter FILE allows the user to specify the function being% modified.%% June 1998  JMG  U of T Vision Labmd = pwd;if nargin < 1	file = 'jg.m';ends=findstr('.m',file);eval([file(1:s-1),' env;']);if nargin > 1	findstr = ['			case ''',str];	fid = fopen(file,'r+');	found = 0;	env=0;	if fid ~= -1		if length(str) == length('env')			if str == 'env'				printstr('"env" is a reserved shortcut.');				env = 1;			end			end			if ~env 			while feof(fid) == 0 & found == 0				pos = ftell(fid);				line = fgetl(fid);				if size(line) >= size(findstr)					if strcmp(line(1:max(size(findstr))),findstr)						found = 1;					end				end			end		end		if found == 1			[temp,items] = fread(fid,inf,'schar');			fseek(fid,pos,-1);			items = fwrite(fid,temp,'schar');			line = ones(size(line))*32;			items = fwrite(fid,line,'schar');				elseif ~env			printstr('Path Not Found.');		end		fclose(fid);	else		printstr('There was a problem opening the main file.');		printstr('Make sure it is not already open (e.g., being edited).');	endelse	fprintf(1,'No parameters passed.\n');endcfcd(md);fprintf(1,'%s\n',md);return
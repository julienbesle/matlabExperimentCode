function [theimage,clut, dxP, dyP, nzsamp, nzseed] = makerandoccimage(cal, maxdev, nzvar, ...		fixationcolor, imagevar, p, randpos )		% make noisenzseed = randn('state');nz = cliprandn(p.n+maxdev*2+1,2);nz = nz*sqrt(nzvar/stdm(nz)^2);if randpos	% random shift of square	neg = coinflip(1,.5);	if ~neg		neg = -1;	end		dxP = floor(rand(1)*maxdev*neg); 	dyP = floor(rand(1)*maxdev*neg); else	dxP = 0; 	dyP = 0; end% the squaretheimage = mksimpleoccrectmat( p.n, p.bglum, ...p.rectwidthP, p.rectheightP, p.rectthickP, dxP, dyP, p.rectlum, ...p.occsizeP, p.gapsizeP, p.occlum );theimage = theimage.*sqrt(imagevar/stdm(theimage)^2);% sample the noise at correct locationnzsamp = nz(maxdev+dyP+1:maxdev+dyP+p.n,maxdev+dxP+1:maxdev+dxP+p.n);% add the image to the noisenz(maxdev+1:maxdev+p.n,maxdev+1:maxdev+p.n) = nz(maxdev+1:maxdev+p.n,maxdev+1:maxdev+p.n)+theimage;% sample the noise at correct location%nzsamp = nz(maxdev+dyP+1:maxdev+dyP+p.n,maxdev+dxP+1:maxdev+dxP+p.n);% make the pixel image and clut[theimage,clut] = makeimage(nz,cal,fixationcolor);return;
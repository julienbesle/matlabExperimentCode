function HTkanizaCS(name,stimtype,realonly)% function kaniza(name,stimtype,maxtrials,mainscrs)%% finds threshold to use in the feature experiment% 'name' is the name the subject, in initials% default screen is 1. default number of trials is 1500.%% July 18-19 1998  JMG  U of Toronto Vision Labif nargin > 1	% change directories to the main folder	cf;	jg home;		defarg('stimtype','modal');	defarg('realonly',0);		if ischar(realonly)		realstimonly = str2num(realonly);	end		% constants	nzcn = .1414;	nzvar = nzcn^2;	if realonly		realstring = 'RO'	else		realstring = '';	end	filename = [name,realstring,'HTkaniza',lower(stimtype),'.dat'];		% amodal condition	if ~strcmp(lower(stimtype),'amodal') & ~realonly		ringp = 0;	else		ringp = .2;	end	% control condition	if ~strcmp(lower(stimtype),'control') & ~realonly		control = 0;	else		control = 1;	end	% real condition	if ~strcmp(lower(stimtype),'real') | realonly		real = 0;	else		real = 1;	end	% mask condition	if strcmp(lower(stimtype),'mask') & ~realonly 		mask = 1;		sinfreq = 8;		sindeg = 45;  % 90		sinphz = 0; % 135		fixationcolor = 120;	else		mask = 0;	end		% uses RFM's kaniza toolbox	kansz = 100;		% 128 64	100	induceRad = 16;		% 21  10	16	support = .25;	angledeg = 1.75;	% 1.75	image1name = 'fat';	image2name = 'thin';	if ~mask		image1 = mkfatthinmat(kansz, induceRad, support, angledeg*(-1),ringp, 1,-1,0,control,real,0);		image2 = mkfatthinmat(kansz, induceRad, support, angledeg, ringp, 1, -1,0,control,real,0);	else		image1 = mkfatthinmatgrating(kansz, induceRad, support, angledeg*(-1),ringp, 1,-1,0,control,real,0,sinfreq,sindeg,sinphz);		image2 = mkfatthinmatgrating(kansz, induceRad, support, angledeg, ringp, 1, -1,0,control,real,0,sinfreq,sindeg,sinphz);	end			image1 = scalearb(image1,-1,0);	image2 = scalearb(image2,-1,0);	var1 = std(image1(:))^2;	var2 = std(image2(:))^2;		% load template	if strcmp(name,'ideal');		template1 = image1;		template2 = image2;		if strcmp(lower(stimtype),'real') 			guess = 5e-5;		else			guess = 1e-4;			end	else		[s1r1,s1r2,s2r1,s2r2,r1,r2,smoothr1,smoothr2,class,classtol,rawclass]  = doclassraw([name,'kaniza',stimtype,'.dat'],pwd,1,1,1);		 		template1 = s1r1+s2r1; 		template2 = s1r2+s2r2;		if strcmp(lower(stimtype),'control')			guess = 10;		elseif strcmp(lower(stimtype),'real') 			guess = .001;		else			guess = .01;		end	end			% parameters for trialsource	% guess = 10;	numstimlevels = 10;	maxtrials = 500;	logrange = 3;	levels = logspace(log10(guess/10^(logrange/2)),log10(guess*10^(logrange/2)),numstimlevels)';	gamma = .5;		% open the data file and write the header	if exist(filename) ~= 2		fwid = fopen(filename,'a+');					savecomment(fwid,['Data File Name: ',filename]);		savecomment(fwid,'human template kaniza experiment');		savecommand(fwid,['stimtype = ',quotestring(stimtype),';']); 		savecommand(fwid,['kansz = ',num2str(kansz),'; induceRad = ',num2str(induceRad),';support = ',num2str(support),';angledeg = ',num2str(angledeg),'; ringp = ',num2str(ringp),'; control = ',num2str(control),'; real = ',num2str(real),';']);		savecommand(fwid,['noisevar = ',num2str(nzvar),';gam = ',num2str(gamma),';']);		savecommand(fwid,['image1name = ',quotestring(image1name),'; image2name = ',quotestring(image2name),';']);		savecommand(fwid,'image1id = 1; image2id = 2;');		savecommand(fwid,'trial = 1; sequence = 2; response = 3; correct = 4; stimlevel = 5; randnstate1 = 6; randnstate2 = 7;');		savedatetime(fwid);	else		fwid = fopen(filename,'a+');		savedatetime(fwid);	end			% initialize	sequence = coinflip(maxtrials*numstimlevels,.5)+1;	responses = sequence*0 + 1;	trialsrc = mkconstim( levels, maxtrials, 1);		% main loop	for trial = 1:maxtrials*numstimlevels  				% get the next stimulus level		[trialsrc,contrast,id] = gettrial(trialsrc);		% make the image		randnstate = randn('state');		nz=cliprandn(size(image1),2);		nz=nz*sqrt(nzvar/std(nz(:))^2);		eval(['currimage=image',num2str(sequence(trial)),'*sqrt(contrast/var',num2str(sequence(trial)),')+nz;']);				% get the response		% we subract image2 (thin) from image 1 (fat) to make the classification image.		corr1 = sum(sum(currimage.*template1));		corr2 = sum(sum(currimage.*template2));			if corr1 > corr2			responses(trial) = 1;		else			responses(trial) = 2;		end		% 		thecorr = sum(sum(classtol.*currimage));% 		if thecorr > 0% 			responses(trial) == 2;% 		else% 			responses(trial) == 1;% 		end								% accuracy		correct=sequence(trial)==responses(trial);			% echo results		% printstr(['shown = ',num2str(sequence(trial)),' c1 = ',num2str(corr1),' c2 = ',num2str(corr2),' resp = ',num2str(responses(trial))]);		printstr(['trial #',num2str(trial),' stimlevel: ',num2str(contrast),'  correct: ',num2str(correct)]);				% save the data		data=[trialsrc.trial,sequence(trial),responses(trial),correct,contrast];		fprintf(fwid,'%g\t',data); 		fprintf(fwid,'%.0f\t',[randnstate(1),randnstate(2)]);		fprintf(fwid,'\n');		% update trial source		trialsrc = telltrial(trialsrc,contrast,correct);					end	% close the file	fclose(fwid);		else		printstr('Not enough input arguments.')endreturn
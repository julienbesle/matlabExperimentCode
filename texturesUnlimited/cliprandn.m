function x = cliprandn(sz,numsd,variance)% function x = cliprandn(sz,numsd,variance)%% clipped gaussian sample with replacement.% generates numbers from a gaussian distribution of% mean 0 and standard deviation sqrt(variance).% if parameter NUMSD is passed, all samples with an% absolute value > NUMSD*sqrt(variance) are replaced% by random values from the remaining samples.%% if variance is not passed, default is 1.% if numsd is not passed, default is 2.%% clipping increases the time exponentially until% about 90,000 samples. After this point it only% quadruples the time.%% the routine is much faster if no variance is sent % (i.e., variance = 1).%% NB: the resulting variance of the matrix is not % equal to the passed variance if clipping occurs.% (it will be less).% samplex = randn(sz);% set the variance if passedif exist('variance','var')	x = x.*sqrt(variance/std(x(:))^2);	numsd = numsd*std(x(:));end% check for NUMSDif ~exist('numsd','var')	numsd = 2;endcutlocs = find(abs(x)>numsd);	% outliersglocs = find(abs(x)<=numsd); 	% othersif cutlocs	randlocs = scalearb(randn(size(cutlocs(:))),.01,1); 	%x(cutlocs) = x(glocs(ceil(length(glocs(:))*randlocs)));	replocs = ceil(length(glocs(:))*randlocs);	replocs([find(replocs>length(glocs(:))),find(replocs<1)]) = 1;	x(cutlocs) = x(glocs(replocs));endreturn;